{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Tarraf\\\\Desktop\\\\blog\\\\team3\\\\Backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Tarraf\\\\Desktop\\\\blog\\\\team3\\\\Backend\",\"filename\":\"C:\\\\Users\\\\Tarraf\\\\Desktop\\\\blog\\\\team3\\\\Backend\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Tarraf\\\\Desktop\\\\blog\\\\team3\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend",
      "filename": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend\\src\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend\\src\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = require(\"./app\");\n\nvar db = require(\"./db\");\n\nvar start = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n    var controller;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return db.initializeDatabase();\n\n          case 2:\n            controller = _context8.sent;\n            app.get('/', function (req, res) {\n              return res.send(\"ok\");\n            }); //user post\n\n            app.get('/posts', /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {\n                var userposts;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        _context.next = 3;\n                        return controller.postsUser();\n\n                      case 3:\n                        userposts = _context.sent;\n                        res.json({\n                          result: userposts\n                        });\n                        _context.next = 10;\n                        break;\n\n                      case 7:\n                        _context.prev = 7;\n                        _context.t0 = _context[\"catch\"](0);\n                        next(_context.t0);\n\n                      case 10:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[0, 7]]);\n              }));\n\n              return function (_x, _x2, _x3) {\n                return _ref2.apply(this, arguments);\n              };\n            }()); //admin post\n\n            app.get('/dashboard', /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res, next) {\n                var adminposts;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _context2.next = 3;\n                        return controller.postsAdmin();\n\n                      case 3:\n                        adminposts = _context2.sent;\n                        res.json({\n                          result: adminposts\n                        });\n                        _context2.next = 10;\n                        break;\n\n                      case 7:\n                        _context2.prev = 7;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        next(_context2.t0);\n\n                      case 10:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[0, 7]]);\n              }));\n\n              return function (_x4, _x5, _x6) {\n                return _ref3.apply(this, arguments);\n              };\n            }()); //get messages\n\n            app.get('/dashboard/messages', /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res, next) {\n                var messages;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.prev = 0;\n                        _context3.next = 3;\n                        return controller.messages();\n\n                      case 3:\n                        messages = _context3.sent;\n                        res.json(messages);\n                        _context3.next = 10;\n                        break;\n\n                      case 7:\n                        _context3.prev = 7;\n                        _context3.t0 = _context3[\"catch\"](0);\n                        next(_context3.t0);\n\n                      case 10:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[0, 7]]);\n              }));\n\n              return function (_x7, _x8, _x9) {\n                return _ref4.apply(this, arguments);\n              };\n            }()); // READ BY CATEGORY\n\n            app.get('/posts/:category', /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res, next) {\n                var category, posts;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        category = req.params.category;\n                        _context4.prev = 1;\n                        _context4.next = 4;\n                        return controller.getPostCategory(category);\n\n                      case 4:\n                        posts = _context4.sent;\n                        res.json({\n                          result: posts\n                        });\n                        _context4.next = 11;\n                        break;\n\n                      case 8:\n                        _context4.prev = 8;\n                        _context4.t0 = _context4[\"catch\"](1);\n                        next(_context4.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[1, 8]]);\n              }));\n\n              return function (_x10, _x11, _x12) {\n                return _ref5.apply(this, arguments);\n              };\n            }()); // CREATE POST\n\n            app.get('/posts/add/create', /*#__PURE__*/function () {\n              var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res, next) {\n                var _req$query, name, email, category, title, content, picture, result;\n\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _req$query = req.query, name = _req$query.name, email = _req$query.email, category = _req$query.category, title = _req$query.title, content = _req$query.content, picture = _req$query.picture;\n                        _context5.prev = 1;\n                        _context5.next = 4;\n                        return controller.createPost({\n                          name: name,\n                          email: email,\n                          category: category,\n                          title: title,\n                          content: content,\n                          picture: picture\n                        });\n\n                      case 4:\n                        result = _context5.sent;\n                        res.json({\n                          result: result\n                        });\n                        _context5.next = 11;\n                        break;\n\n                      case 8:\n                        _context5.prev = 8;\n                        _context5.t0 = _context5[\"catch\"](1);\n                        next(_context5.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[1, 8]]);\n              }));\n\n              return function (_x13, _x14, _x15) {\n                return _ref6.apply(this, arguments);\n              };\n            }()); // CREATE MESSAGE\n\n            app.get('/message/create', /*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res, next) {\n                var _req$query2, username, email, message, messages;\n\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        _req$query2 = req.query, username = _req$query2.username, email = _req$query2.email, message = _req$query2.message;\n                        _context6.prev = 1;\n                        _context6.next = 4;\n                        return controller.createMessage({\n                          username: username,\n                          email: email,\n                          message: message\n                        });\n\n                      case 4:\n                        messages = _context6.sent;\n                        res.json({\n                          messages: messages\n                        });\n                        _context6.next = 11;\n                        break;\n\n                      case 8:\n                        _context6.prev = 8;\n                        _context6.t0 = _context6[\"catch\"](1);\n                        next(_context6.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6, null, [[1, 8]]);\n              }));\n\n              return function (_x16, _x17, _x18) {\n                return _ref7.apply(this, arguments);\n              };\n            }()); // DELETE\n\n            app.get('/dashboard/delete/:id', /*#__PURE__*/function () {\n              var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res, next) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context7.prev = 1;\n                        _context7.next = 4;\n                        return controller.deletePosts(id);\n\n                      case 4:\n                        result = _context7.sent;\n                        res.json({\n                          result: result\n                        });\n                        _context7.next = 11;\n                        break;\n\n                      case 8:\n                        _context7.prev = 8;\n                        _context7.t0 = _context7[\"catch\"](1);\n                        next(_context7.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[1, 8]]);\n              }));\n\n              return function (_x19, _x20, _x21) {\n                return _ref8.apply(this, arguments);\n              };\n            }());\n\n          case 11:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function start() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nstart();\napp.listen(8000, function () {\n  return console.log('server listening on port 8000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "require",
        "db",
        "start",
        "initializeDatabase",
        "controller",
        "get",
        "req",
        "res",
        "send",
        "next",
        "postsUser",
        "userposts",
        "json",
        "result",
        "postsAdmin",
        "adminposts",
        "messages",
        "category",
        "params",
        "getPostCategory",
        "posts",
        "query",
        "name",
        "email",
        "title",
        "content",
        "picture",
        "createPost",
        "username",
        "message",
        "createMessage",
        "id",
        "deletePosts",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend\\src\\",
      "sourcesContent": [
        "const app = require(\"./app\");\r\nconst db = require(\"./db\");\r\n\r\nconst start = async() => {\r\n    const controller = await db.initializeDatabase()\r\n    app.get('/', (req, res) => res.send(\"ok\"));\r\n\r\n    //user post\r\n    app.get('/posts', async (req, res, next) => {\r\n        \r\n        try {\r\n            const userposts = await controller.postsUser();\r\n            res.json({  result: userposts });\r\n        } catch (e) {\r\n            next(e);\r\n        }\r\n    })\r\n\r\n    //admin post\r\n    app.get('/dashboard', async (req, res, next) => {\r\n        \r\n        try {\r\n            const adminposts = await controller.postsAdmin();\r\n            res.json({  result: adminposts });\r\n        } catch (e) {\r\n            next(e);\r\n        }\r\n    })\r\n\r\n\r\n    //get messages\r\n    app.get('/dashboard/messages', async (req, res, next) => {\r\n        \r\n        try {\r\n            const messages = await controller.messages();\r\n            res.json(messages);\r\n        } catch (e) {\r\n            next(e);\r\n        }\r\n    })\r\n\r\n\r\n    // READ BY CATEGORY\r\n    app.get('/posts/:category', async (req, res, next) => {\r\n        const { category } = req.params\r\n        try {\r\n            const posts = await controller.getPostCategory(category);\r\n            res.json({  result: posts });\r\n        } catch (e) {\r\n            next(e);\r\n        }\r\n    })\r\n\r\n    \r\n      // CREATE POST\r\n  app.get('/posts/add/create', async (req, res, next) => {\r\n    const { name, email, category, title,  content,  picture } = req.query;\r\n    try {\r\n        const result = await controller.createPost({ name, email, category, title,  content, picture });\r\n        res.json({  result });\r\n    } catch (e) {\r\n        next(e);\r\n    }\r\n})\r\n      // CREATE MESSAGE\r\n  app.get('/message/create', async (req, res, next) => {\r\n    const { username, email, message } = req.query;\r\n    try {\r\n        const messages = await controller.createMessage({ username, email, message });\r\n        res.json({  messages });\r\n    } catch (e) {\r\n        next(e);\r\n    }\r\n})\r\n\r\n    // DELETE\r\n    app.get('/dashboard/delete/:id', async (req, res, next) => {\r\n        const { id } = req.params\r\n        try {\r\n            const result = await controller.deletePosts(id);\r\n            res.json({  result });\r\n        } catch (e) {\r\n            next(e);\r\n        }\r\n    })\r\n\r\n\r\n}\r\n\r\n\r\n\r\nstart();\r\n \r\n\r\n\r\n\r\napp.listen( 8000, () => console.log('server listening on port 8000') );\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1620718908510
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Tarraf\\\\Desktop\\\\blog\\\\team3\\\\Backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Tarraf\\\\Desktop\\\\blog\\\\team3\\\\Backend\",\"filename\":\"C:\\\\Users\\\\Tarraf\\\\Desktop\\\\blog\\\\team3\\\\Backend\\\\src\\\\app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Tarraf\\\\Desktop\\\\blog\\\\team3\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend",
      "filename": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend\\src\\app.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend\\src\\app.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend\\src\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend\\src\\",
        "sourceFileName": "app.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n// back/src/app.js\nvar express = require(\"express\");\n\nvar cookieParser = require(\"cookie-parser\"); // parses cookies\n\n\nvar session = require(\"express-session\"); // parses sessions\n\n\nvar favicon = require(\"serve-favicon\"); // serves favicon\n\n\nvar cors = require(\"cors\"); // allows cross-domain requests\n\n\nvar createError = require(\"http-errors\"); // better JS errors\n\n\nvar path = require(\"path\");\n\nvar app = express(); // create a new app\n\nvar IS_PRODUCTION = app.get('env') === 'production';\n\nif (IS_PRODUCTION) {\n  app.set('trust proxy', 1); // secures the app if it is running behind Nginx/Apache/similar\n}\n\napp.use(cors()); // allows cross domain requests\n\napp.use(express.json()); // allows POST requests with JSON\n\napp.use(express.urlencoded({\n  extended: false\n})); // allows POST requests with GET-like parameters\n\napp.use(cookieParser()); // Parses cookies\n\napp.use(favicon(path.join(__dirname, '../public', 'favicon.ico'))); // <-- location of favicon\n\napp.use(express[\"static\"](path.join(__dirname, '../public'))); // <-- location of public dir\n\napp.use(session({\n  // handles sessions\n  secret: 'keyboard cat',\n  // <-- this should be a secret phrase\n  cookie: {\n    secure: IS_PRODUCTION\n  },\n  // <-- secure only in production\n  resave: true,\n  saveUninitialized: true\n}));\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImNvb2tpZVBhcnNlciIsInNlc3Npb24iLCJmYXZpY29uIiwiY29ycyIsImNyZWF0ZUVycm9yIiwicGF0aCIsImFwcCIsIklTX1BST0RVQ1RJT04iLCJnZXQiLCJzZXQiLCJ1c2UiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwiam9pbiIsIl9fZGlybmFtZSIsInNlY3JldCIsImNvb2tpZSIsInNlY3VyZSIsInJlc2F2ZSIsInNhdmVVbmluaXRpYWxpemVkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsWUFBWSxHQUFHRCxPQUFPLENBQUMsZUFBRCxDQUE1QixDLENBQStDOzs7QUFDL0MsSUFBTUUsT0FBTyxHQUFHRixPQUFPLENBQUMsaUJBQUQsQ0FBdkIsQyxDQUE0Qzs7O0FBQzVDLElBQU1HLE9BQU8sR0FBR0gsT0FBTyxDQUFDLGVBQUQsQ0FBdkIsQyxDQUEwQzs7O0FBQzFDLElBQU1JLElBQUksR0FBR0osT0FBTyxDQUFDLE1BQUQsQ0FBcEIsQyxDQUE4Qjs7O0FBQzlCLElBQU1LLFdBQVcsR0FBR0wsT0FBTyxDQUFDLGFBQUQsQ0FBM0IsQyxDQUE0Qzs7O0FBQzVDLElBQU1NLElBQUksR0FBR04sT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBRUEsSUFBTU8sR0FBRyxHQUFHUixPQUFPLEVBQW5CLEMsQ0FBdUI7O0FBRXZCLElBQU1TLGFBQWEsR0FBR0QsR0FBRyxDQUFDRSxHQUFKLENBQVEsS0FBUixNQUFtQixZQUF6Qzs7QUFFQSxJQUFJRCxhQUFKLEVBQW1CO0FBQ2ZELEVBQUFBLEdBQUcsQ0FBQ0csR0FBSixDQUFRLGFBQVIsRUFBdUIsQ0FBdkIsRUFEZSxDQUNXO0FBQzdCOztBQUVESCxHQUFHLENBQUNJLEdBQUosQ0FBUVAsSUFBSSxFQUFaLEUsQ0FBaUI7O0FBQ2pCRyxHQUFHLENBQUNJLEdBQUosQ0FBUVosT0FBTyxDQUFDYSxJQUFSLEVBQVIsRSxDQUF5Qjs7QUFDekJMLEdBQUcsQ0FBQ0ksR0FBSixDQUFRWixPQUFPLENBQUNjLFVBQVIsQ0FBbUI7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBbkIsQ0FBUixFLENBQWtEOztBQUNsRFAsR0FBRyxDQUFDSSxHQUFKLENBQVFWLFlBQVksRUFBcEIsRSxDQUF5Qjs7QUFDekJNLEdBQUcsQ0FBQ0ksR0FBSixDQUFRUixPQUFPLENBQUNHLElBQUksQ0FBQ1MsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFdBQXJCLEVBQWtDLGFBQWxDLENBQUQsQ0FBZixFLENBQW1FOztBQUNuRVQsR0FBRyxDQUFDSSxHQUFKLENBQVFaLE9BQU8sVUFBUCxDQUFlTyxJQUFJLENBQUNTLElBQUwsQ0FBVUMsU0FBVixFQUFxQixXQUFyQixDQUFmLENBQVIsRSxDQUE0RDs7QUFFNURULEdBQUcsQ0FBQ0ksR0FBSixDQUFRVCxPQUFPLENBQUM7QUFBRTtBQUNkZSxFQUFBQSxNQUFNLEVBQUUsY0FESTtBQUNZO0FBQ3hCQyxFQUFBQSxNQUFNLEVBQUU7QUFBRUMsSUFBQUEsTUFBTSxFQUFFWDtBQUFWLEdBRkk7QUFFdUI7QUFDbkNZLEVBQUFBLE1BQU0sRUFBRSxJQUhJO0FBSVpDLEVBQUFBLGlCQUFpQixFQUFFO0FBSlAsQ0FBRCxDQUFmO0FBT0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmhCLEdBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcVGFycmFmXFxEZXNrdG9wXFxibG9nXFx0ZWFtM1xcQmFja2VuZFxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBiYWNrL3NyYy9hcHAuanNcclxuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xyXG5jb25zdCBjb29raWVQYXJzZXIgPSByZXF1aXJlKFwiY29va2llLXBhcnNlclwiKTsgLy8gcGFyc2VzIGNvb2tpZXNcclxuY29uc3Qgc2Vzc2lvbiA9IHJlcXVpcmUoXCJleHByZXNzLXNlc3Npb25cIik7IC8vIHBhcnNlcyBzZXNzaW9uc1xyXG5jb25zdCBmYXZpY29uID0gcmVxdWlyZShcInNlcnZlLWZhdmljb25cIik7IC8vIHNlcnZlcyBmYXZpY29uXHJcbmNvbnN0IGNvcnMgPSByZXF1aXJlKFwiY29yc1wiKTsgLy8gYWxsb3dzIGNyb3NzLWRvbWFpbiByZXF1ZXN0c1xyXG5jb25zdCBjcmVhdGVFcnJvciA9IHJlcXVpcmUoXCJodHRwLWVycm9yc1wiKTsgLy8gYmV0dGVyIEpTIGVycm9yc1xyXG5jb25zdCBwYXRoID0gcmVxdWlyZShcInBhdGhcIik7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7IC8vIGNyZWF0ZSBhIG5ldyBhcHBcclxuXHJcbmNvbnN0IElTX1BST0RVQ1RJT04gPSBhcHAuZ2V0KCdlbnYnKSA9PT0gJ3Byb2R1Y3Rpb24nXHJcblxyXG5pZiAoSVNfUFJPRFVDVElPTikge1xyXG4gICAgYXBwLnNldCgndHJ1c3QgcHJveHknLCAxKSAvLyBzZWN1cmVzIHRoZSBhcHAgaWYgaXQgaXMgcnVubmluZyBiZWhpbmQgTmdpbngvQXBhY2hlL3NpbWlsYXJcclxufVxyXG5cclxuYXBwLnVzZShjb3JzKCkpOyAvLyBhbGxvd3MgY3Jvc3MgZG9tYWluIHJlcXVlc3RzXHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpOyAvLyBhbGxvd3MgUE9TVCByZXF1ZXN0cyB3aXRoIEpTT05cclxuYXBwLnVzZShleHByZXNzLnVybGVuY29kZWQoeyBleHRlbmRlZDogZmFsc2UgfSkpOyAvLyBhbGxvd3MgUE9TVCByZXF1ZXN0cyB3aXRoIEdFVC1saWtlIHBhcmFtZXRlcnNcclxuYXBwLnVzZShjb29raWVQYXJzZXIoKSk7IC8vIFBhcnNlcyBjb29raWVzXHJcbmFwcC51c2UoZmF2aWNvbihwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4vcHVibGljJywgJ2Zhdmljb24uaWNvJykpKSAvLyA8LS0gbG9jYXRpb24gb2YgZmF2aWNvblxyXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi9wdWJsaWMnKSkpOyAvLyA8LS0gbG9jYXRpb24gb2YgcHVibGljIGRpclxyXG5cclxuYXBwLnVzZShzZXNzaW9uKHsgLy8gaGFuZGxlcyBzZXNzaW9uc1xyXG4gICAgc2VjcmV0OiAna2V5Ym9hcmQgY2F0JywgLy8gPC0tIHRoaXMgc2hvdWxkIGJlIGEgc2VjcmV0IHBocmFzZVxyXG4gICAgY29va2llOiB7IHNlY3VyZTogSVNfUFJPRFVDVElPTiB9LCAvLyA8LS0gc2VjdXJlIG9ubHkgaW4gcHJvZHVjdGlvblxyXG4gICAgcmVzYXZlOiB0cnVlLFxyXG4gICAgc2F2ZVVuaW5pdGlhbGl6ZWQ6IHRydWVcclxufSkpXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGFwcDtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "cookieParser",
        "session",
        "favicon",
        "cors",
        "createError",
        "path",
        "app",
        "IS_PRODUCTION",
        "get",
        "set",
        "use",
        "json",
        "urlencoded",
        "extended",
        "join",
        "__dirname",
        "secret",
        "cookie",
        "secure",
        "resave",
        "saveUninitialized",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,eAAD,CAA5B,C,CAA+C;;;AAC/C,IAAME,OAAO,GAAGF,OAAO,CAAC,iBAAD,CAAvB,C,CAA4C;;;AAC5C,IAAMG,OAAO,GAAGH,OAAO,CAAC,eAAD,CAAvB,C,CAA0C;;;AAC1C,IAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB,C,CAA8B;;;AAC9B,IAAMK,WAAW,GAAGL,OAAO,CAAC,aAAD,CAA3B,C,CAA4C;;;AAC5C,IAAMM,IAAI,GAAGN,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMO,GAAG,GAAGR,OAAO,EAAnB,C,CAAuB;;AAEvB,IAAMS,aAAa,GAAGD,GAAG,CAACE,GAAJ,CAAQ,KAAR,MAAmB,YAAzC;;AAEA,IAAID,aAAJ,EAAmB;AACfD,EAAAA,GAAG,CAACG,GAAJ,CAAQ,aAAR,EAAuB,CAAvB,EADe,CACW;AAC7B;;AAEDH,GAAG,CAACI,GAAJ,CAAQP,IAAI,EAAZ,E,CAAiB;;AACjBG,GAAG,CAACI,GAAJ,CAAQZ,OAAO,CAACa,IAAR,EAAR,E,CAAyB;;AACzBL,GAAG,CAACI,GAAJ,CAAQZ,OAAO,CAACc,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR,E,CAAkD;;AAClDP,GAAG,CAACI,GAAJ,CAAQV,YAAY,EAApB,E,CAAyB;;AACzBM,GAAG,CAACI,GAAJ,CAAQR,OAAO,CAACG,IAAI,CAACS,IAAL,CAAUC,SAAV,EAAqB,WAArB,EAAkC,aAAlC,CAAD,CAAf,E,CAAmE;;AACnET,GAAG,CAACI,GAAJ,CAAQZ,OAAO,UAAP,CAAeO,IAAI,CAACS,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR,E,CAA4D;;AAE5DT,GAAG,CAACI,GAAJ,CAAQT,OAAO,CAAC;AAAE;AACde,EAAAA,MAAM,EAAE,cADI;AACY;AACxBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,MAAM,EAAEX;AAAV,GAFI;AAEuB;AACnCY,EAAAA,MAAM,EAAE,IAHI;AAIZC,EAAAA,iBAAiB,EAAE;AAJP,CAAD,CAAf;AAOAC,MAAM,CAACC,OAAP,GAAiBhB,GAAjB",
      "sourceRoot": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend\\src\\",
      "sourcesContent": [
        "// back/src/app.js\r\nconst express = require(\"express\");\r\nconst cookieParser = require(\"cookie-parser\"); // parses cookies\r\nconst session = require(\"express-session\"); // parses sessions\r\nconst favicon = require(\"serve-favicon\"); // serves favicon\r\nconst cors = require(\"cors\"); // allows cross-domain requests\r\nconst createError = require(\"http-errors\"); // better JS errors\r\nconst path = require(\"path\");\r\n\r\nconst app = express(); // create a new app\r\n\r\nconst IS_PRODUCTION = app.get('env') === 'production'\r\n\r\nif (IS_PRODUCTION) {\r\n    app.set('trust proxy', 1) // secures the app if it is running behind Nginx/Apache/similar\r\n}\r\n\r\napp.use(cors()); // allows cross domain requests\r\napp.use(express.json()); // allows POST requests with JSON\r\napp.use(express.urlencoded({ extended: false })); // allows POST requests with GET-like parameters\r\napp.use(cookieParser()); // Parses cookies\r\napp.use(favicon(path.join(__dirname, '../public', 'favicon.ico'))) // <-- location of favicon\r\napp.use(express.static(path.join(__dirname, '../public'))); // <-- location of public dir\r\n\r\napp.use(session({ // handles sessions\r\n    secret: 'keyboard cat', // <-- this should be a secret phrase\r\n    cookie: { secure: IS_PRODUCTION }, // <-- secure only in production\r\n    resave: true,\r\n    saveUninitialized: true\r\n}))\r\n\r\nmodule.exports = app;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1619749125663
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Tarraf\\\\Desktop\\\\blog\\\\team3\\\\Backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Tarraf\\\\Desktop\\\\blog\\\\team3\\\\Backend\",\"filename\":\"C:\\\\Users\\\\Tarraf\\\\Desktop\\\\blog\\\\team3\\\\Backend\\\\src\\\\db.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Tarraf\\\\Desktop\\\\blog\\\\team3\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend",
      "filename": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend\\src\\db.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend\\src\\db.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend\\src\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend\\src\\",
        "sourceFileName": "db.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// back/src/db.js\nvar sqlite = require(\"sqlite\");\n\nvar sqlite3 = require(\"sqlite3\");\n\nvar SQL = require(\"sql-template-strings\"); //creation of db\n// const test = async () => {\n//   try {\n//     const db = await sqlite.open({\n//       filename: \"db.sqlite\",\n//       driver: sqlite3.Database,\n//     });\n//     /**\n//      * Create the table\n//      **/\n//     await db.run(`CREATE TABLE post_tbl\n//           (id INTEGER PRIMARY KEY AUTOINCREMENT, \n//             name text ,\n//             email text ,\n//               category varchar(25) , \n//               title varchar(25) , \n//               content text  ,\n//               description text  ,\n//               created_at DATE ,\n//               picture TEXT ,\n//               status varchar(25) not null DEFAULT 'I'\n//               );\n//         `);\n//         await db.run(`CREATE TABLE admin\n//           (id INTEGER PRIMARY KEY AUTOINCREMENT, \n//             user text not null,\n//             password varchar(25) not null\n//               );\n//         `);\n//         await db.run(`CREATE TABLE message\n//           (id INTEGER PRIMARY KEY AUTOINCREMENT, \n//             username text ,\n//             email text ,\n//             message text \n//               );\n//         `);\n//         const stmt = await db.prepare(SQL`INSERT INTO admin (user, password) VALUES (?, ?)`);\n//         await stmt.run(`Bassel`,`Root`);\n//         /** finally, we close the statement **/\n//         await stmt.finalize();\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n// module.exports = { test };\n// back/src/db.js\n\n\nvar initializeDatabase = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n    var db, postsAdmin, messages, postsUser, getPostCategory, createPost, createMessage, deletePosts, controller;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return sqlite.open({\n              filename: 'db.sqlite',\n              driver: sqlite3.Database\n            });\n\n          case 2:\n            db = _context8.sent;\n\n            postsAdmin = /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                var statement, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        statement = \"SELECT * FROM post_tbl\";\n                        _context.prev = 1;\n                        _context.next = 4;\n                        return db.all(statement);\n\n                      case 4:\n                        rows = _context.sent;\n\n                        if (rows.length) {\n                          _context.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"no rows found\");\n\n                      case 7:\n                        return _context.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context.prev = 10;\n                        _context.t0 = _context[\"catch\"](1);\n                        throw new Error(\"couldn't retrieve contacts: \" + _context.t0.message);\n\n                      case 13:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 10]]);\n              }));\n\n              return function postsAdmin() {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            messages = /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                var statement, rows;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        statement = \"SELECT * FROM message\";\n                        _context2.prev = 1;\n                        _context2.next = 4;\n                        return db.all(statement);\n\n                      case 4:\n                        rows = _context2.sent;\n\n                        if (rows.length) {\n                          _context2.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"no messages found\");\n\n                      case 7:\n                        return _context2.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context2.prev = 10;\n                        _context2.t0 = _context2[\"catch\"](1);\n                        throw new Error(\"couldn't retrieve messages: \" + _context2.t0.message);\n\n                      case 13:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[1, 10]]);\n              }));\n\n              return function messages() {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            postsUser = /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                var statement, rows;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        statement = \"SELECT name, category, title,  content, created_at, picture FROM post_tbl\";\n                        _context3.prev = 1;\n                        _context3.next = 4;\n                        return db.all(statement);\n\n                      case 4:\n                        rows = _context3.sent;\n\n                        if (rows.length) {\n                          _context3.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"no rows found\");\n\n                      case 7:\n                        return _context3.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context3.prev = 10;\n                        _context3.t0 = _context3[\"catch\"](1);\n                        throw new Error(\"couldn't retrieve contacts: \" + _context3.t0.message);\n\n                      case 13:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[1, 10]]);\n              }));\n\n              return function postsUser() {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            getPostCategory = /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(category) {\n                var statement, posts;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        statement = \"SELECT name, email, category, title,  content, created_at, picture FROM post_tbl WHERE category = \".concat(category);\n                        _context4.next = 3;\n                        return db.get(statement);\n\n                      case 3:\n                        posts = _context4.sent;\n\n                        if (posts) {\n                          _context4.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"contact \".concat(category, \" not found\"));\n\n                      case 6:\n                        return _context4.abrupt(\"return\", posts);\n\n                      case 7:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function getPostCategory(_x) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            createPost = /*#__PURE__*/function () {\n              var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(props) {\n                var name, email, category, title, content, picture, result, id;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        if (!(!props || !props.name || !props.email || !props.category || !props.title || !props.content)) {\n                          _context5.next = 2;\n                          break;\n                        }\n\n                        throw new Error(\"you must provide all needed DATA\");\n\n                      case 2:\n                        name = props.name, email = props.email, category = props.category, title = props.title, content = props.content, picture = props.picture;\n                        _context5.prev = 3;\n                        _context5.next = 6;\n                        return db.run(\"INSERT INTO post_tbl (name, email, category, title,  content, picture) VALUES (?, ?, ?, ?, ?, ?)\", [name, email, category, title, content, picture]);\n\n                      case 6:\n                        result = _context5.sent;\n                        id = result.lastID;\n                        return _context5.abrupt(\"return\", id);\n\n                      case 11:\n                        _context5.prev = 11;\n                        _context5.t0 = _context5[\"catch\"](3);\n                        throw new Error(\"couldn't insert this combination: \" + _context5.t0.message);\n\n                      case 14:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[3, 11]]);\n              }));\n\n              return function createPost(_x2) {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            createMessage = /*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(props) {\n                var username, email, message, result, id;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        if (!(!props || !props.username || !props.email || !props.message)) {\n                          _context6.next = 2;\n                          break;\n                        }\n\n                        throw new Error(\"you must provide all needed DATA\");\n\n                      case 2:\n                        username = props.username, email = props.email, message = props.message;\n                        _context6.prev = 3;\n                        _context6.next = 6;\n                        return db.run(\"INSERT INTO message (username, email, message) VALUES (?, ?, ?)\", [username, email, message]);\n\n                      case 6:\n                        result = _context6.sent;\n                        id = result.lastID;\n                        return _context6.abrupt(\"return\", id);\n\n                      case 11:\n                        _context6.prev = 11;\n                        _context6.t0 = _context6[\"catch\"](3);\n                        throw new Error(\"couldn't insert this combination: \" + _context6.t0.message);\n\n                      case 14:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6, null, [[3, 11]]);\n              }));\n\n              return function createMessage(_x3) {\n                return _ref7.apply(this, arguments);\n              };\n            }();\n\n            deletePosts = /*#__PURE__*/function () {\n              var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        _context7.prev = 0;\n                        _context7.next = 3;\n                        return db.run(\"DELETE FROM post_tbl WHERE id = ?\", id);\n\n                      case 3:\n                        result = _context7.sent;\n\n                        if (!(result.changes === 0)) {\n                          _context7.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"contact \\\"\".concat(id, \"\\\" does not exist\"));\n\n                      case 6:\n                        return _context7.abrupt(\"return\", true);\n\n                      case 9:\n                        _context7.prev = 9;\n                        _context7.t0 = _context7[\"catch\"](0);\n                        throw new Error(\"couldn't delete the contact \\\"\".concat(id, \"\\\": \") + _context7.t0.message);\n\n                      case 12:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[0, 9]]);\n              }));\n\n              return function deletePosts(_x4) {\n                return _ref8.apply(this, arguments);\n              };\n            }(); // const getContact = async (id) => {\n            //     let statement = `SELECT contact_id AS id, name, email FROM contacts WHERE contact_id = ${id}`\n            //     const contact = await db.get(statement);\n            //     if (!contact) throw new Error(`contact ${id} not found`);\n            //     return contact;\n            // }\n            // const createContact = async (props) => {\n            //     if (!props || !props.name || !props.email) {\n            //         throw new Error(`you must provide a name and an email`);\n            //     }\n            //     const { name, email } = props;\n            //     try {\n            //         const result = await db.run(`INSERT INTO contacts (name,email) VALUES (?, ?)`, [name, email]);\n            //         const id = result.lastID;\n            //         return id;\n            //     } catch (e) {\n            //         throw new Error(`couldn't insert this combination: ` + e.message);\n            //     }\n            // }\n            // const deleteContact = async (id) => {\n            //     try {\n            //         const result = await db.run(`DELETE FROM contacts WHERE contact_id = ?`, id);\n            //         if (result.changes === 0) throw new Error(`contact \"${id}\" does not exist`);\n            //         return true;\n            //     } catch (e) {\n            //         throw new Error(`couldn't delete the contact \"${id}\": ` + e.message);\n            //     }\n            // }\n            // const updateContact = async (id, props) => {\n            //     if (!props && !(props.name && props.email)) {\n            //         throw new Error(`you must provide a name or an email`);\n            //     }\n            //     const { name, email } = props;\n            //     let stmt, params = [];\n            //     if (name && email) {\n            //         stmt = `UPDATE contacts SET email = ?, name = ? WHERE contact_id = ?`;\n            //         params = [name, email, id];\n            //     }\n            //     else if (name && !email) {\n            //         stmt = `UPDATE contacts SET name = ? WHERE contact_id = ?`;\n            //         params = [name, id];\n            //     }\n            //     else if (email && !name) {\n            //         stmt = `UPDATE contacts SET email = ? WHERE contact_id = ?`;\n            //         params = [email, id];\n            //     }\n            //     try {\n            //         const result = await db.run(stmt, params);\n            //         if (result.changes === 0) throw new Error(`no changes were made`);\n            //         return true;\n            //     } catch (e) {\n            //         throw new Error(`couldn't update the contact ${id}: ` + e.message);\n            //     }\n            // }\n\n\n            controller = {\n              postsAdmin: postsAdmin,\n              postsUser: postsUser,\n              createPost: createPost,\n              getPostCategory: getPostCategory,\n              deletePosts: deletePosts,\n              createMessage: createMessage,\n              messages: messages\n            };\n            return _context8.abrupt(\"return\", controller);\n\n          case 12:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function initializeDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar db = {\n  initializeDatabase: initializeDatabase\n};\nmodule.exports = db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbInNxbGl0ZSIsInJlcXVpcmUiLCJzcWxpdGUzIiwiU1FMIiwiaW5pdGlhbGl6ZURhdGFiYXNlIiwib3BlbiIsImZpbGVuYW1lIiwiZHJpdmVyIiwiRGF0YWJhc2UiLCJkYiIsInBvc3RzQWRtaW4iLCJzdGF0ZW1lbnQiLCJhbGwiLCJyb3dzIiwibGVuZ3RoIiwiRXJyb3IiLCJtZXNzYWdlIiwibWVzc2FnZXMiLCJwb3N0c1VzZXIiLCJnZXRQb3N0Q2F0ZWdvcnkiLCJjYXRlZ29yeSIsImdldCIsInBvc3RzIiwiY3JlYXRlUG9zdCIsInByb3BzIiwibmFtZSIsImVtYWlsIiwidGl0bGUiLCJjb250ZW50IiwicGljdHVyZSIsInJ1biIsInJlc3VsdCIsImlkIiwibGFzdElEIiwiY3JlYXRlTWVzc2FnZSIsInVzZXJuYW1lIiwiZGVsZXRlUG9zdHMiLCJjaGFuZ2VzIiwiY29udHJvbGxlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0EsSUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFNQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1FLEdBQUcsR0FBR0YsT0FBTyxDQUFDLHNCQUFELENBQW5CLEMsQ0FFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7O0FBR0EsSUFBTUcsa0JBQWtCO0FBQUEscUVBQUc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFB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QUE7QUFBQSxlQS9FRzs7QUFBQSw4QkErRWpCb0IsV0EvRWlCO0FBQUE7QUFBQTtBQUFBLGlCQTBGdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFTUUsWUFBQUEsVUF0SmlCLEdBc0pKO0FBQ2Y1QixjQUFBQSxVQUFVLEVBQVZBLFVBRGU7QUFFZlEsY0FBQUEsU0FBUyxFQUFUQSxTQUZlO0FBR2ZLLGNBQUFBLFVBQVUsRUFBVkEsVUFIZTtBQUlmSixjQUFBQSxlQUFlLEVBQWZBLGVBSmU7QUFLZmlCLGNBQUFBLFdBQVcsRUFBWEEsV0FMZTtBQU1mRixjQUFBQSxhQUFhLEVBQWJBLGFBTmU7QUFPZmpCLGNBQUFBLFFBQVEsRUFBUkE7QUFQZSxhQXRKSTtBQUFBLDhDQWdLaEJxQixVQWhLZ0I7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBSDs7QUFBQSxrQkFBbEJsQyxrQkFBa0I7QUFBQTtBQUFBO0FBQUEsR0FBeEI7O0FBbUtBLElBQU1LLEVBQUUsR0FBRztBQUFFTCxFQUFBQSxrQkFBa0IsRUFBbEJBO0FBQUYsQ0FBWDtBQUVBbUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCL0IsRUFBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxUYXJyYWZcXERlc2t0b3BcXGJsb2dcXHRlYW0zXFxCYWNrZW5kXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbIi8vIGJhY2svc3JjL2RiLmpzXHJcbmNvbnN0IHNxbGl0ZSA9IHJlcXVpcmUoXCJzcWxpdGVcIik7XHJcbmNvbnN0IHNxbGl0ZTMgPSByZXF1aXJlKFwic3FsaXRlM1wiKTtcclxuY29uc3QgU1FMID0gcmVxdWlyZShcInNxbC10ZW1wbGF0ZS1zdHJpbmdzXCIpO1xyXG5cclxuLy9jcmVhdGlvbiBvZiBkYlxyXG4vLyBjb25zdCB0ZXN0ID0gYXN5bmMgKCkgPT4ge1xyXG4vLyAgIHRyeSB7XHJcbi8vICAgICBjb25zdCBkYiA9IGF3YWl0IHNxbGl0ZS5vcGVuKHtcclxuLy8gICAgICAgZmlsZW5hbWU6IFwiZGIuc3FsaXRlXCIsXHJcbi8vICAgICAgIGRyaXZlcjogc3FsaXRlMy5EYXRhYmFzZSxcclxuLy8gICAgIH0pO1xyXG4vLyAgICAgLyoqXHJcbi8vICAgICAgKiBDcmVhdGUgdGhlIHRhYmxlXHJcbi8vICAgICAgKiovXHJcbi8vICAgICBhd2FpdCBkYi5ydW4oYENSRUFURSBUQUJMRSBwb3N0X3RibFxyXG4vLyAgICAgICAgICAgKGlkIElOVEVHRVIgUFJJTUFSWSBLRVkgQVVUT0lOQ1JFTUVOVCwgXHJcbi8vICAgICAgICAgICAgIG5hbWUgdGV4dCAsXHJcbi8vICAgICAgICAgICAgIGVtYWlsIHRleHQgLFxyXG4vLyAgICAgICAgICAgICAgIGNhdGVnb3J5IHZhcmNoYXIoMjUpICwgXHJcbi8vICAgICAgICAgICAgICAgdGl0bGUgdmFyY2hhcigyNSkgLCBcclxuLy8gICAgICAgICAgICAgICBjb250ZW50IHRleHQgICxcclxuLy8gICAgICAgICAgICAgICBkZXNjcmlwdGlvbiB0ZXh0ICAsXHJcbi8vICAgICAgICAgICAgICAgY3JlYXRlZF9hdCBEQVRFICxcclxuLy8gICAgICAgICAgICAgICBwaWN0dXJlIFRFWFQgLFxyXG4vLyAgICAgICAgICAgICAgIHN0YXR1cyB2YXJjaGFyKDI1KSBub3QgbnVsbCBERUZBVUxUICdJJ1xyXG4vLyAgICAgICAgICAgICAgICk7XHJcbi8vICAgICAgICAgYCk7XHJcblxyXG4vLyAgICAgICAgIGF3YWl0IGRiLnJ1bihgQ1JFQVRFIFRBQkxFIGFkbWluXHJcbi8vICAgICAgICAgICAoaWQgSU5URUdFUiBQUklNQVJZIEtFWSBBVVRPSU5DUkVNRU5ULCBcclxuLy8gICAgICAgICAgICAgdXNlciB0ZXh0IG5vdCBudWxsLFxyXG4vLyAgICAgICAgICAgICBwYXNzd29yZCB2YXJjaGFyKDI1KSBub3QgbnVsbFxyXG4vLyAgICAgICAgICAgICAgICk7XHJcbi8vICAgICAgICAgYCk7XHJcblxyXG5cclxuLy8gICAgICAgICBhd2FpdCBkYi5ydW4oYENSRUFURSBUQUJMRSBtZXNzYWdlXHJcbi8vICAgICAgICAgICAoaWQgSU5URUdFUiBQUklNQVJZIEtFWSBBVVRPSU5DUkVNRU5ULCBcclxuLy8gICAgICAgICAgICAgdXNlcm5hbWUgdGV4dCAsXHJcbi8vICAgICAgICAgICAgIGVtYWlsIHRleHQgLFxyXG4vLyAgICAgICAgICAgICBtZXNzYWdlIHRleHQgXHJcbi8vICAgICAgICAgICAgICAgKTtcclxuLy8gICAgICAgICBgKTtcclxuXHJcbi8vICAgICAgICAgY29uc3Qgc3RtdCA9IGF3YWl0IGRiLnByZXBhcmUoU1FMYElOU0VSVCBJTlRPIGFkbWluICh1c2VyLCBwYXNzd29yZCkgVkFMVUVTICg/LCA/KWApO1xyXG4vLyAgICAgICAgIGF3YWl0IHN0bXQucnVuKGBCYXNzZWxgLGBSb290YCk7XHJcbi8vICAgICAgICAgLyoqIGZpbmFsbHksIHdlIGNsb3NlIHRoZSBzdGF0ZW1lbnQgKiovXHJcbi8vICAgICAgICAgYXdhaXQgc3RtdC5maW5hbGl6ZSgpO1xyXG5cclxuICAgICAgICBcclxuXHJcbiAgIFxyXG4vLyAgIH0gY2F0Y2ggKGUpIHtcclxuLy8gICAgIGNvbnNvbGUubG9nKGUpO1xyXG4vLyAgIH1cclxuLy8gfTtcclxuLy8gbW9kdWxlLmV4cG9ydHMgPSB7IHRlc3QgfTtcclxuXHJcbi8vIGJhY2svc3JjL2RiLmpzXHJcblxyXG5cclxuY29uc3QgaW5pdGlhbGl6ZURhdGFiYXNlID0gYXN5bmMgKCkgPT4ge1xyXG5cclxuICAgIGNvbnN0IGRiID0gYXdhaXQgc3FsaXRlLm9wZW4oe1xyXG4gICAgICAgIGZpbGVuYW1lOiAnZGIuc3FsaXRlJyxcclxuICAgICAgICBkcml2ZXI6IHNxbGl0ZTMuRGF0YWJhc2VcclxuICAgIH0pXHJcblxyXG4gICAgY29uc3QgcG9zdHNBZG1pbiA9IGFzeW5jICgpID0+IHtcclxuICAgICAgICBsZXQgc3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gcG9zdF90YmxgXHJcbiAgICAgICBcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCByb3dzID0gYXdhaXQgZGIuYWxsKHN0YXRlbWVudCk7XHJcbiAgICAgICAgICAgIGlmICghcm93cy5sZW5ndGgpIHRocm93IG5ldyBFcnJvcihgbm8gcm93cyBmb3VuZGApO1xyXG4gICAgICAgICAgICByZXR1cm4gcm93cztcclxuICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgY291bGRuJ3QgcmV0cmlldmUgY29udGFjdHM6IGAgKyBlLm1lc3NhZ2UpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGNvbnN0IG1lc3NhZ2VzID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIGxldCBzdGF0ZW1lbnQgPSBgU0VMRUNUICogRlJPTSBtZXNzYWdlYFxyXG4gICAgICAgXHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3Qgcm93cyA9IGF3YWl0IGRiLmFsbChzdGF0ZW1lbnQpO1xyXG4gICAgICAgICAgICBpZiAoIXJvd3MubGVuZ3RoKSB0aHJvdyBuZXcgRXJyb3IoYG5vIG1lc3NhZ2VzIGZvdW5kYCk7XHJcbiAgICAgICAgICAgIHJldHVybiByb3dzO1xyXG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBjb3VsZG4ndCByZXRyaWV2ZSBtZXNzYWdlczogYCArIGUubWVzc2FnZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHBvc3RzVXNlciA9IGFzeW5jICgpID0+IHtcclxuICAgICAgICBsZXQgc3RhdGVtZW50ID0gYFNFTEVDVCBuYW1lLCBjYXRlZ29yeSwgdGl0bGUsICBjb250ZW50LCBjcmVhdGVkX2F0LCBwaWN0dXJlIEZST00gcG9zdF90YmxgXHJcbiAgICAgICBcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCByb3dzID0gYXdhaXQgZGIuYWxsKHN0YXRlbWVudCk7XHJcbiAgICAgICAgICAgIGlmICghcm93cy5sZW5ndGgpIHRocm93IG5ldyBFcnJvcihgbm8gcm93cyBmb3VuZGApO1xyXG4gICAgICAgICAgICByZXR1cm4gcm93cztcclxuICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgY291bGRuJ3QgcmV0cmlldmUgY29udGFjdHM6IGAgKyBlLm1lc3NhZ2UpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgY29uc3QgZ2V0UG9zdENhdGVnb3J5ID0gYXN5bmMgKGNhdGVnb3J5KSA9PiB7XHJcbiAgICAgICAgbGV0IHN0YXRlbWVudCA9IGBTRUxFQ1QgbmFtZSwgZW1haWwsIGNhdGVnb3J5LCB0aXRsZSwgIGNvbnRlbnQsIGNyZWF0ZWRfYXQsIHBpY3R1cmUgRlJPTSBwb3N0X3RibCBXSEVSRSBjYXRlZ29yeSA9ICR7Y2F0ZWdvcnl9YFxyXG4gICAgICAgIGNvbnN0IHBvc3RzID0gYXdhaXQgZGIuZ2V0KHN0YXRlbWVudCk7XHJcbiAgICAgICAgaWYgKCFwb3N0cykgdGhyb3cgbmV3IEVycm9yKGBjb250YWN0ICR7Y2F0ZWdvcnl9IG5vdCBmb3VuZGApO1xyXG4gICAgICAgIHJldHVybiBwb3N0cztcclxuICAgIH1cclxuXHJcblxyXG4gICAgY29uc3QgY3JlYXRlUG9zdCA9IGFzeW5jIChwcm9wcykgPT4ge1xyXG4gICAgICAgIGlmICghcHJvcHMgfHwgIXByb3BzLm5hbWUgfHwgIXByb3BzLmVtYWlsIHx8ICFwcm9wcy5jYXRlZ29yeSB8fCAhcHJvcHMudGl0bGUgfHwgIXByb3BzLmNvbnRlbnQgICAgKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgeW91IG11c3QgcHJvdmlkZSBhbGwgbmVlZGVkIERBVEFgKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgeyBuYW1lLCBlbWFpbCwgY2F0ZWdvcnksIHRpdGxlLCAgY29udGVudCwgIHBpY3R1cmV9ID0gcHJvcHM7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZGIucnVuKGBJTlNFUlQgSU5UTyBwb3N0X3RibCAobmFtZSwgZW1haWwsIGNhdGVnb3J5LCB0aXRsZSwgIGNvbnRlbnQsIHBpY3R1cmUpIFZBTFVFUyAoPywgPywgPywgPywgPywgPylgLCBbbmFtZSwgZW1haWwsIGNhdGVnb3J5LCB0aXRsZSwgIGNvbnRlbnQsIHBpY3R1cmVdKTtcclxuICAgICAgICAgICAgY29uc3QgaWQgPSByZXN1bHQubGFzdElEO1xyXG4gICAgICAgICAgICByZXR1cm4gaWQ7XHJcbiAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGNvdWxkbid0IGluc2VydCB0aGlzIGNvbWJpbmF0aW9uOiBgICsgZS5tZXNzYWdlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGNvbnN0IGNyZWF0ZU1lc3NhZ2UgPSBhc3luYyAocHJvcHMpID0+IHtcclxuICAgICAgICBpZiAoIXByb3BzIHx8ICFwcm9wcy51c2VybmFtZSB8fCAhcHJvcHMuZW1haWwgfHwgIXByb3BzLm1lc3NhZ2UgICkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYHlvdSBtdXN0IHByb3ZpZGUgYWxsIG5lZWRlZCBEQVRBYCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHsgdXNlcm5hbWUsIGVtYWlsLCBtZXNzYWdlfSA9IHByb3BzO1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRiLnJ1bihgSU5TRVJUIElOVE8gbWVzc2FnZSAodXNlcm5hbWUsIGVtYWlsLCBtZXNzYWdlKSBWQUxVRVMgKD8sID8sID8pYCwgW3VzZXJuYW1lLCBlbWFpbCwgbWVzc2FnZV0pO1xyXG4gICAgICAgICAgICBjb25zdCBpZCA9IHJlc3VsdC5sYXN0SUQ7XHJcbiAgICAgICAgICAgIHJldHVybiBpZDtcclxuICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgY291bGRuJ3QgaW5zZXJ0IHRoaXMgY29tYmluYXRpb246IGAgKyBlLm1lc3NhZ2UpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBkZWxldGVQb3N0cyA9IGFzeW5jIChpZCkgPT4ge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRiLnJ1bihgREVMRVRFIEZST00gcG9zdF90YmwgV0hFUkUgaWQgPSA/YCwgaWQpO1xyXG4gICAgICAgICAgICBpZiAocmVzdWx0LmNoYW5nZXMgPT09IDApIHRocm93IG5ldyBFcnJvcihgY29udGFjdCBcIiR7aWR9XCIgZG9lcyBub3QgZXhpc3RgKTtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGNvdWxkbid0IGRlbGV0ZSB0aGUgY29udGFjdCBcIiR7aWR9XCI6IGAgKyBlLm1lc3NhZ2UpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgLy8gY29uc3QgZ2V0Q29udGFjdCA9IGFzeW5jIChpZCkgPT4ge1xyXG4gICAgLy8gICAgIGxldCBzdGF0ZW1lbnQgPSBgU0VMRUNUIGNvbnRhY3RfaWQgQVMgaWQsIG5hbWUsIGVtYWlsIEZST00gY29udGFjdHMgV0hFUkUgY29udGFjdF9pZCA9ICR7aWR9YFxyXG4gICAgLy8gICAgIGNvbnN0IGNvbnRhY3QgPSBhd2FpdCBkYi5nZXQoc3RhdGVtZW50KTtcclxuICAgIC8vICAgICBpZiAoIWNvbnRhY3QpIHRocm93IG5ldyBFcnJvcihgY29udGFjdCAke2lkfSBub3QgZm91bmRgKTtcclxuICAgIC8vICAgICByZXR1cm4gY29udGFjdDtcclxuICAgIC8vIH1cclxuXHJcbiAgICAvLyBjb25zdCBjcmVhdGVDb250YWN0ID0gYXN5bmMgKHByb3BzKSA9PiB7XHJcbiAgICAvLyAgICAgaWYgKCFwcm9wcyB8fCAhcHJvcHMubmFtZSB8fCAhcHJvcHMuZW1haWwpIHtcclxuICAgIC8vICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGB5b3UgbXVzdCBwcm92aWRlIGEgbmFtZSBhbmQgYW4gZW1haWxgKTtcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyAgICAgY29uc3QgeyBuYW1lLCBlbWFpbCB9ID0gcHJvcHM7XHJcbiAgICAvLyAgICAgdHJ5IHtcclxuICAgIC8vICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZGIucnVuKGBJTlNFUlQgSU5UTyBjb250YWN0cyAobmFtZSxlbWFpbCkgVkFMVUVTICg/LCA/KWAsIFtuYW1lLCBlbWFpbF0pO1xyXG4gICAgLy8gICAgICAgICBjb25zdCBpZCA9IHJlc3VsdC5sYXN0SUQ7XHJcbiAgICAvLyAgICAgICAgIHJldHVybiBpZDtcclxuICAgIC8vICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAvLyAgICAgICAgIHRocm93IG5ldyBFcnJvcihgY291bGRuJ3QgaW5zZXJ0IHRoaXMgY29tYmluYXRpb246IGAgKyBlLm1lc3NhZ2UpO1xyXG4gICAgLy8gICAgIH1cclxuICAgIC8vIH1cclxuXHJcbiAgICAvLyBjb25zdCBkZWxldGVDb250YWN0ID0gYXN5bmMgKGlkKSA9PiB7XHJcbiAgICAvLyAgICAgdHJ5IHtcclxuICAgIC8vICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZGIucnVuKGBERUxFVEUgRlJPTSBjb250YWN0cyBXSEVSRSBjb250YWN0X2lkID0gP2AsIGlkKTtcclxuICAgIC8vICAgICAgICAgaWYgKHJlc3VsdC5jaGFuZ2VzID09PSAwKSB0aHJvdyBuZXcgRXJyb3IoYGNvbnRhY3QgXCIke2lkfVwiIGRvZXMgbm90IGV4aXN0YCk7XHJcbiAgICAvLyAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgLy8gICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgIC8vICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBjb3VsZG4ndCBkZWxldGUgdGhlIGNvbnRhY3QgXCIke2lkfVwiOiBgICsgZS5tZXNzYWdlKTtcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyB9XHJcblxyXG4gICAgLy8gY29uc3QgdXBkYXRlQ29udGFjdCA9IGFzeW5jIChpZCwgcHJvcHMpID0+IHtcclxuICAgIC8vICAgICBpZiAoIXByb3BzICYmICEocHJvcHMubmFtZSAmJiBwcm9wcy5lbWFpbCkpIHtcclxuICAgIC8vICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGB5b3UgbXVzdCBwcm92aWRlIGEgbmFtZSBvciBhbiBlbWFpbGApO1xyXG4gICAgLy8gICAgIH1cclxuICAgIC8vICAgICBjb25zdCB7IG5hbWUsIGVtYWlsIH0gPSBwcm9wcztcclxuICAgIC8vICAgICBsZXQgc3RtdCwgcGFyYW1zID0gW107XHJcblxyXG4gICAgLy8gICAgIGlmIChuYW1lICYmIGVtYWlsKSB7XHJcbiAgICAvLyAgICAgICAgIHN0bXQgPSBgVVBEQVRFIGNvbnRhY3RzIFNFVCBlbWFpbCA9ID8sIG5hbWUgPSA/IFdIRVJFIGNvbnRhY3RfaWQgPSA/YDtcclxuICAgIC8vICAgICAgICAgcGFyYW1zID0gW25hbWUsIGVtYWlsLCBpZF07XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gICAgIGVsc2UgaWYgKG5hbWUgJiYgIWVtYWlsKSB7XHJcbiAgICAvLyAgICAgICAgIHN0bXQgPSBgVVBEQVRFIGNvbnRhY3RzIFNFVCBuYW1lID0gPyBXSEVSRSBjb250YWN0X2lkID0gP2A7XHJcbiAgICAvLyAgICAgICAgIHBhcmFtcyA9IFtuYW1lLCBpZF07XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gICAgIGVsc2UgaWYgKGVtYWlsICYmICFuYW1lKSB7XHJcbiAgICAvLyAgICAgICAgIHN0bXQgPSBgVVBEQVRFIGNvbnRhY3RzIFNFVCBlbWFpbCA9ID8gV0hFUkUgY29udGFjdF9pZCA9ID9gO1xyXG4gICAgLy8gICAgICAgICBwYXJhbXMgPSBbZW1haWwsIGlkXTtcclxuICAgIC8vICAgICB9XHJcblxyXG4gICAgLy8gICAgIHRyeSB7XHJcbiAgICAvLyAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRiLnJ1bihzdG10LCBwYXJhbXMpO1xyXG4gICAgLy8gICAgICAgICBpZiAocmVzdWx0LmNoYW5nZXMgPT09IDApIHRocm93IG5ldyBFcnJvcihgbm8gY2hhbmdlcyB3ZXJlIG1hZGVgKTtcclxuICAgIC8vICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAvLyAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgLy8gICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGNvdWxkbid0IHVwZGF0ZSB0aGUgY29udGFjdCAke2lkfTogYCArIGUubWVzc2FnZSk7XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gfVxyXG5cclxuICAgIGNvbnN0IGNvbnRyb2xsZXIgPSB7XHJcbiAgICAgICAgcG9zdHNBZG1pbixcclxuICAgICAgICBwb3N0c1VzZXIsXHJcbiAgICAgICAgY3JlYXRlUG9zdCxcclxuICAgICAgICBnZXRQb3N0Q2F0ZWdvcnksXHJcbiAgICAgICAgZGVsZXRlUG9zdHMsXHJcbiAgICAgICAgY3JlYXRlTWVzc2FnZSxcclxuICAgICAgICBtZXNzYWdlc1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBjb250cm9sbGVyO1xyXG59XHJcblxyXG5jb25zdCBkYiA9IHsgaW5pdGlhbGl6ZURhdGFiYXNlIH1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZGI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "sqlite",
        "require",
        "sqlite3",
        "SQL",
        "initializeDatabase",
        "open",
        "filename",
        "driver",
        "Database",
        "db",
        "postsAdmin",
        "statement",
        "all",
        "rows",
        "length",
        "Error",
        "message",
        "messages",
        "postsUser",
        "getPostCategory",
        "category",
        "get",
        "posts",
        "createPost",
        "props",
        "name",
        "email",
        "title",
        "content",
        "picture",
        "run",
        "result",
        "id",
        "lastID",
        "createMessage",
        "username",
        "deletePosts",
        "changes",
        "controller",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Tarraf\\Desktop\\blog\\team3\\Backend\\src\\",
      "sourcesContent": [
        "// back/src/db.js\r\nconst sqlite = require(\"sqlite\");\r\nconst sqlite3 = require(\"sqlite3\");\r\nconst SQL = require(\"sql-template-strings\");\r\n\r\n//creation of db\r\n// const test = async () => {\r\n//   try {\r\n//     const db = await sqlite.open({\r\n//       filename: \"db.sqlite\",\r\n//       driver: sqlite3.Database,\r\n//     });\r\n//     /**\r\n//      * Create the table\r\n//      **/\r\n//     await db.run(`CREATE TABLE post_tbl\r\n//           (id INTEGER PRIMARY KEY AUTOINCREMENT, \r\n//             name text ,\r\n//             email text ,\r\n//               category varchar(25) , \r\n//               title varchar(25) , \r\n//               content text  ,\r\n//               description text  ,\r\n//               created_at DATE ,\r\n//               picture TEXT ,\r\n//               status varchar(25) not null DEFAULT 'I'\r\n//               );\r\n//         `);\r\n\r\n//         await db.run(`CREATE TABLE admin\r\n//           (id INTEGER PRIMARY KEY AUTOINCREMENT, \r\n//             user text not null,\r\n//             password varchar(25) not null\r\n//               );\r\n//         `);\r\n\r\n\r\n//         await db.run(`CREATE TABLE message\r\n//           (id INTEGER PRIMARY KEY AUTOINCREMENT, \r\n//             username text ,\r\n//             email text ,\r\n//             message text \r\n//               );\r\n//         `);\r\n\r\n//         const stmt = await db.prepare(SQL`INSERT INTO admin (user, password) VALUES (?, ?)`);\r\n//         await stmt.run(`Bassel`,`Root`);\r\n//         /** finally, we close the statement **/\r\n//         await stmt.finalize();\r\n\r\n        \r\n\r\n   \r\n//   } catch (e) {\r\n//     console.log(e);\r\n//   }\r\n// };\r\n// module.exports = { test };\r\n\r\n// back/src/db.js\r\n\r\n\r\nconst initializeDatabase = async () => {\r\n\r\n    const db = await sqlite.open({\r\n        filename: 'db.sqlite',\r\n        driver: sqlite3.Database\r\n    })\r\n\r\n    const postsAdmin = async () => {\r\n        let statement = `SELECT * FROM post_tbl`\r\n       \r\n        try {\r\n            const rows = await db.all(statement);\r\n            if (!rows.length) throw new Error(`no rows found`);\r\n            return rows;\r\n        } catch (e) {\r\n            throw new Error(`couldn't retrieve contacts: ` + e.message);\r\n        }\r\n    }\r\n    const messages = async () => {\r\n        let statement = `SELECT * FROM message`\r\n       \r\n        try {\r\n            const rows = await db.all(statement);\r\n            if (!rows.length) throw new Error(`no messages found`);\r\n            return rows;\r\n        } catch (e) {\r\n            throw new Error(`couldn't retrieve messages: ` + e.message);\r\n        }\r\n    }\r\n\r\n    const postsUser = async () => {\r\n        let statement = `SELECT name, category, title,  content, created_at, picture FROM post_tbl`\r\n       \r\n        try {\r\n            const rows = await db.all(statement);\r\n            if (!rows.length) throw new Error(`no rows found`);\r\n            return rows;\r\n        } catch (e) {\r\n            throw new Error(`couldn't retrieve contacts: ` + e.message);\r\n        }\r\n    }\r\n\r\n\r\n    const getPostCategory = async (category) => {\r\n        let statement = `SELECT name, email, category, title,  content, created_at, picture FROM post_tbl WHERE category = ${category}`\r\n        const posts = await db.get(statement);\r\n        if (!posts) throw new Error(`contact ${category} not found`);\r\n        return posts;\r\n    }\r\n\r\n\r\n    const createPost = async (props) => {\r\n        if (!props || !props.name || !props.email || !props.category || !props.title || !props.content    ) {\r\n            throw new Error(`you must provide all needed DATA`);\r\n        }\r\n        const { name, email, category, title,  content,  picture} = props;\r\n        try {\r\n            const result = await db.run(`INSERT INTO post_tbl (name, email, category, title,  content, picture) VALUES (?, ?, ?, ?, ?, ?)`, [name, email, category, title,  content, picture]);\r\n            const id = result.lastID;\r\n            return id;\r\n        } catch (e) {\r\n            throw new Error(`couldn't insert this combination: ` + e.message);\r\n        }\r\n    }\r\n    \r\n    const createMessage = async (props) => {\r\n        if (!props || !props.username || !props.email || !props.message  ) {\r\n            throw new Error(`you must provide all needed DATA`);\r\n        }\r\n        const { username, email, message} = props;\r\n        try {\r\n            const result = await db.run(`INSERT INTO message (username, email, message) VALUES (?, ?, ?)`, [username, email, message]);\r\n            const id = result.lastID;\r\n            return id;\r\n        } catch (e) {\r\n            throw new Error(`couldn't insert this combination: ` + e.message);\r\n        }\r\n    }\r\n\r\n    const deletePosts = async (id) => {\r\n        try {\r\n            const result = await db.run(`DELETE FROM post_tbl WHERE id = ?`, id);\r\n            if (result.changes === 0) throw new Error(`contact \"${id}\" does not exist`);\r\n            return true;\r\n        } catch (e) {\r\n            throw new Error(`couldn't delete the contact \"${id}\": ` + e.message);\r\n        }\r\n    }\r\n\r\n\r\n    // const getContact = async (id) => {\r\n    //     let statement = `SELECT contact_id AS id, name, email FROM contacts WHERE contact_id = ${id}`\r\n    //     const contact = await db.get(statement);\r\n    //     if (!contact) throw new Error(`contact ${id} not found`);\r\n    //     return contact;\r\n    // }\r\n\r\n    // const createContact = async (props) => {\r\n    //     if (!props || !props.name || !props.email) {\r\n    //         throw new Error(`you must provide a name and an email`);\r\n    //     }\r\n    //     const { name, email } = props;\r\n    //     try {\r\n    //         const result = await db.run(`INSERT INTO contacts (name,email) VALUES (?, ?)`, [name, email]);\r\n    //         const id = result.lastID;\r\n    //         return id;\r\n    //     } catch (e) {\r\n    //         throw new Error(`couldn't insert this combination: ` + e.message);\r\n    //     }\r\n    // }\r\n\r\n    // const deleteContact = async (id) => {\r\n    //     try {\r\n    //         const result = await db.run(`DELETE FROM contacts WHERE contact_id = ?`, id);\r\n    //         if (result.changes === 0) throw new Error(`contact \"${id}\" does not exist`);\r\n    //         return true;\r\n    //     } catch (e) {\r\n    //         throw new Error(`couldn't delete the contact \"${id}\": ` + e.message);\r\n    //     }\r\n    // }\r\n\r\n    // const updateContact = async (id, props) => {\r\n    //     if (!props && !(props.name && props.email)) {\r\n    //         throw new Error(`you must provide a name or an email`);\r\n    //     }\r\n    //     const { name, email } = props;\r\n    //     let stmt, params = [];\r\n\r\n    //     if (name && email) {\r\n    //         stmt = `UPDATE contacts SET email = ?, name = ? WHERE contact_id = ?`;\r\n    //         params = [name, email, id];\r\n    //     }\r\n    //     else if (name && !email) {\r\n    //         stmt = `UPDATE contacts SET name = ? WHERE contact_id = ?`;\r\n    //         params = [name, id];\r\n    //     }\r\n    //     else if (email && !name) {\r\n    //         stmt = `UPDATE contacts SET email = ? WHERE contact_id = ?`;\r\n    //         params = [email, id];\r\n    //     }\r\n\r\n    //     try {\r\n    //         const result = await db.run(stmt, params);\r\n    //         if (result.changes === 0) throw new Error(`no changes were made`);\r\n    //         return true;\r\n    //     } catch (e) {\r\n    //         throw new Error(`couldn't update the contact ${id}: ` + e.message);\r\n    //     }\r\n    // }\r\n\r\n    const controller = {\r\n        postsAdmin,\r\n        postsUser,\r\n        createPost,\r\n        getPostCategory,\r\n        deletePosts,\r\n        createMessage,\r\n        messages\r\n    }\r\n\r\n    return controller;\r\n}\r\n\r\nconst db = { initializeDatabase }\r\n\r\nmodule.exports = db;"
      ]
    },
    "sourceType": "script",
    "mtime": 1620718827455
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/omar/omar/Blog/Backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/omar/omar/Blog/Backend\",\"filename\":\"/home/omar/omar/Blog/Backend/src/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/omar/omar/Blog/Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/omar/omar/Blog/Backend/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/omar/omar/Blog/Backend",
      "filename": "/home/omar/omar/Blog/Backend/src/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/omar/omar/Blog/Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/omar/omar/Blog/Backend/src/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/omar/omar/Blog/Backend/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/omar/omar/Blog/Backend/src/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = require(\"./app\");\n\nvar db = require(\"./db\");\n\nvar start = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n    var controller;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return db.initializeDatabase();\n\n          case 2:\n            controller = _context11.sent;\n            // app.get('/', (req, res) => res.send(\"ok\"));\n            //user post\n            app.get('/', /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {\n                var userposts;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        _context.next = 3;\n                        return controller.postsUser();\n\n                      case 3:\n                        userposts = _context.sent;\n                        res.json({\n                          success: true,\n                          result: userposts\n                        });\n                        _context.next = 10;\n                        break;\n\n                      case 7:\n                        _context.prev = 7;\n                        _context.t0 = _context[\"catch\"](0);\n                        next(_context.t0);\n\n                      case 10:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[0, 7]]);\n              }));\n\n              return function (_x, _x2, _x3) {\n                return _ref2.apply(this, arguments);\n              };\n            }()); //admin post\n\n            app.get('/dashboard', /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res, next) {\n                var adminposts;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _context2.next = 3;\n                        return controller.postsAdmin();\n\n                      case 3:\n                        adminposts = _context2.sent;\n                        res.json({\n                          success: true,\n                          result: adminposts\n                        });\n                        _context2.next = 10;\n                        break;\n\n                      case 7:\n                        _context2.prev = 7;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        next(_context2.t0);\n\n                      case 10:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[0, 7]]);\n              }));\n\n              return function (_x4, _x5, _x6) {\n                return _ref3.apply(this, arguments);\n              };\n            }());\n            app.get('/dashboard/pending', /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res, next) {\n                var adminposts;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.prev = 0;\n                        _context3.next = 3;\n                        return controller.pendingPosts();\n\n                      case 3:\n                        adminposts = _context3.sent;\n                        res.json({\n                          success: true,\n                          result: adminposts\n                        });\n                        _context3.next = 10;\n                        break;\n\n                      case 7:\n                        _context3.prev = 7;\n                        _context3.t0 = _context3[\"catch\"](0);\n                        next(_context3.t0);\n\n                      case 10:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[0, 7]]);\n              }));\n\n              return function (_x7, _x8, _x9) {\n                return _ref4.apply(this, arguments);\n              };\n            }()); //get messages\n\n            app.get('/dashboard/messages', /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res, next) {\n                var messages;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.prev = 0;\n                        _context4.next = 3;\n                        return controller.messages();\n\n                      case 3:\n                        messages = _context4.sent;\n                        res.json({\n                          success: true,\n                          result: messages\n                        });\n                        _context4.next = 10;\n                        break;\n\n                      case 7:\n                        _context4.prev = 7;\n                        _context4.t0 = _context4[\"catch\"](0);\n                        next(_context4.t0);\n\n                      case 10:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[0, 7]]);\n              }));\n\n              return function (_x10, _x11, _x12) {\n                return _ref5.apply(this, arguments);\n              };\n            }()); // READ BY CATEGORY\n\n            app.get('/posts/category/:category', /*#__PURE__*/function () {\n              var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res, next) {\n                var category, posts;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        category = req.params.category;\n                        _context5.prev = 1;\n                        _context5.next = 4;\n                        return controller.getPostCategory(category);\n\n                      case 4:\n                        posts = _context5.sent;\n                        res.json({\n                          success: true,\n                          result: posts\n                        });\n                        _context5.next = 11;\n                        break;\n\n                      case 8:\n                        _context5.prev = 8;\n                        _context5.t0 = _context5[\"catch\"](1);\n                        next(_context5.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[1, 8]]);\n              }));\n\n              return function (_x13, _x14, _x15) {\n                return _ref6.apply(this, arguments);\n              };\n            }()); // READ BY ID\n\n            app.get('/posts/:id', /*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res, next) {\n                var id, post;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context6.prev = 1;\n                        _context6.next = 4;\n                        return controller.postsID(id);\n\n                      case 4:\n                        post = _context6.sent;\n                        res.json({\n                          success: true,\n                          result: post\n                        });\n                        _context6.next = 11;\n                        break;\n\n                      case 8:\n                        _context6.prev = 8;\n                        _context6.t0 = _context6[\"catch\"](1);\n                        next(_context6.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6, null, [[1, 8]]);\n              }));\n\n              return function (_x16, _x17, _x18) {\n                return _ref7.apply(this, arguments);\n              };\n            }()); // CREATE POST\n\n            app.get('/post/add/create', /*#__PURE__*/function () {\n              var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res, next) {\n                var _req$query, name, email, category, title, content, picture, result;\n\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        _req$query = req.query, name = _req$query.name, email = _req$query.email, category = _req$query.category, title = _req$query.title, content = _req$query.content, picture = _req$query.picture;\n                        _context7.prev = 1;\n                        _context7.next = 4;\n                        return controller.createPost({\n                          name: name,\n                          email: email,\n                          category: category,\n                          title: title,\n                          content: content,\n                          picture: picture\n                        });\n\n                      case 4:\n                        result = _context7.sent;\n                        res.json({\n                          success: true,\n                          result: result\n                        });\n                        _context7.next = 11;\n                        break;\n\n                      case 8:\n                        _context7.prev = 8;\n                        _context7.t0 = _context7[\"catch\"](1);\n                        next(_context7.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[1, 8]]);\n              }));\n\n              return function (_x19, _x20, _x21) {\n                return _ref8.apply(this, arguments);\n              };\n            }()); // CREATE MESSAGE\n\n            app.get('/message/create', /*#__PURE__*/function () {\n              var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res, next) {\n                var _req$query2, username, email, message, messages;\n\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        _req$query2 = req.query, username = _req$query2.username, email = _req$query2.email, message = _req$query2.message;\n                        _context8.prev = 1;\n                        _context8.next = 4;\n                        return controller.createMessage({\n                          username: username,\n                          email: email,\n                          message: message\n                        });\n\n                      case 4:\n                        messages = _context8.sent;\n                        res.json({\n                          success: true,\n                          messages: messages\n                        });\n                        _context8.next = 11;\n                        break;\n\n                      case 8:\n                        _context8.prev = 8;\n                        _context8.t0 = _context8[\"catch\"](1);\n                        next(_context8.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8, null, [[1, 8]]);\n              }));\n\n              return function (_x22, _x23, _x24) {\n                return _ref9.apply(this, arguments);\n              };\n            }()); // DELETE\n\n            app.get('/dashboard/delete/:id', /*#__PURE__*/function () {\n              var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res, next) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context9.prev = 1;\n                        _context9.next = 4;\n                        return controller.deletePosts(id);\n\n                      case 4:\n                        result = _context9.sent;\n                        res.json({\n                          success: true,\n                          result: result\n                        });\n                        _context9.next = 11;\n                        break;\n\n                      case 8:\n                        _context9.prev = 8;\n                        _context9.t0 = _context9[\"catch\"](1);\n                        next(_context9.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9, null, [[1, 8]]);\n              }));\n\n              return function (_x25, _x26, _x27) {\n                return _ref10.apply(this, arguments);\n              };\n            }()); //ACCEPT\n\n            app.get('/dashboard/accept/:id', /*#__PURE__*/function () {\n              var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res, next) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context10.prev = 1;\n                        _context10.next = 4;\n                        return controller.acceptPost(id);\n\n                      case 4:\n                        result = _context10.sent;\n                        res.json({\n                          success: true,\n                          result: result\n                        });\n                        _context10.next = 11;\n                        break;\n\n                      case 8:\n                        _context10.prev = 8;\n                        _context10.t0 = _context10[\"catch\"](1);\n                        next(_context10.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[1, 8]]);\n              }));\n\n              return function (_x28, _x29, _x30) {\n                return _ref11.apply(this, arguments);\n              };\n            }());\n\n          case 13:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function start() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nstart();\napp.listen(8000, function () {\n  return console.log('server listening on port 8000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "require",
        "db",
        "start",
        "initializeDatabase",
        "controller",
        "get",
        "req",
        "res",
        "next",
        "postsUser",
        "userposts",
        "json",
        "success",
        "result",
        "postsAdmin",
        "adminposts",
        "pendingPosts",
        "messages",
        "category",
        "params",
        "getPostCategory",
        "posts",
        "id",
        "postsID",
        "post",
        "query",
        "name",
        "email",
        "title",
        "content",
        "picture",
        "createPost",
        "username",
        "message",
        "createMessage",
        "deletePosts",
        "acceptPost",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/home/omar/omar/Blog/Backend/src/",
      "sourcesContent": [
        "const app = require(\"./app\");\nconst db = require(\"./db\");\n\nconst start = async() => {\n    const controller = await db.initializeDatabase()\n    // app.get('/', (req, res) => res.send(\"ok\"));\n\n    //user post\n    app.get('/', async (req, res, next) => {\n        \n        try {\n            const userposts = await controller.postsUser();\n            res.json({ success: true, result: userposts });\n        } catch (e) {\n            next(e);\n        }\n    })\n\n    //admin post\n    app.get('/dashboard', async (req, res, next) => {\n        \n        try {\n            const adminposts = await controller.postsAdmin();\n            res.json({ success: true, result: adminposts });\n        } catch (e) {\n            next(e);\n        }\n    })\n    app.get('/dashboard/pending', async (req, res, next) => {\n        \n        try {\n            const adminposts = await controller.pendingPosts();\n            res.json({ success: true, result: adminposts });\n        } catch (e) {\n            next(e);\n        }\n    })\n\n\n    //get messages\n    app.get('/dashboard/messages', async (req, res, next) => {\n        \n        try {\n            const messages = await controller.messages();\n            res.json({success : true, result: messages});\n        } catch (e) {\n            next(e);\n        }\n    })\n\n\n    // READ BY CATEGORY\n    app.get('/posts/category/:category', async (req, res, next) => {\n        const { category } = req.params\n        try {\n            const posts = await controller.getPostCategory(category);\n            res.json({ success: true, result: posts });\n        } catch (e) {\n            next(e);\n        }\n    })\n\n\n      // READ BY ID\n      app.get('/posts/:id', async (req, res, next) => {\n        const { id } = req.params\n        try {\n            const post = await controller.postsID(id);\n            res.json({ success: true, result: post });\n        } catch (e) {\n            next(e);\n        }\n    })\n    \n\n    \n      // CREATE POST\n  app.get('/post/add/create', async (req, res, next) => {\n    const { name, email, category, title,  content,  picture } = req.query;\n    try {\n        const result = await controller.createPost({ name, email, category, title,  content, picture });\n        res.json({ success: true, result });\n    } catch (e) {\n        next(e);\n    }\n})\n      // CREATE MESSAGE\n  app.get('/message/create', async (req, res, next) => {\n    const { username, email, message } = req.query;\n    try {\n        const messages = await controller.createMessage({ username, email, message });\n        res.json({ success: true, messages });\n    } catch (e) {\n        next(e);\n    }\n})\n\n    // DELETE\n    app.get('/dashboard/delete/:id', async (req, res, next) => {\n        const { id } = req.params\n        try {\n            const result = await controller.deletePosts(id);\n            res.json({ success: true, result });\n        } catch (e) {\n            next(e);\n        }\n    })\n\n    //ACCEPT\n    app.get('/dashboard/accept/:id', async (req, res, next) => {\n        const { id } = req.params;\n        try {\n            const result = await controller.acceptPost(id);\n            res.json({ success: true, result });\n        } catch (e) {\n            next(e);\n        }\n    })\n\n\n\n}\n\n\n\nstart();\n \n\n\n\napp.listen( 8000, () => console.log('server listening on port 8000') );"
      ]
    },
    "sourceType": "script",
    "mtime": 1621157659710
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/omar/omar/Blog/Backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/omar/omar/Blog/Backend\",\"filename\":\"/home/omar/omar/Blog/Backend/src/app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/omar/omar/Blog/Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/omar/omar/Blog/Backend/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/omar/omar/Blog/Backend",
      "filename": "/home/omar/omar/Blog/Backend/src/app.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/omar/omar/Blog/Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/omar/omar/Blog/Backend/src/app.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/omar/omar/Blog/Backend/src/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/omar/omar/Blog/Backend/src/",
        "sourceFileName": "app.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n// back/src/app.js\nvar express = require(\"express\");\n\nvar cookieParser = require(\"cookie-parser\"); // parses cookies\n\n\nvar session = require(\"express-session\"); // parses sessions\n\n\nvar favicon = require(\"serve-favicon\"); // serves favicon\n\n\nvar cors = require(\"cors\"); // allows cross-domain requests\n\n\nvar createError = require(\"http-errors\"); // better JS errors\n\n\nvar path = require(\"path\");\n\nvar app = express(); // create a new app\n\nvar IS_PRODUCTION = app.get('env') === 'production';\n\nif (IS_PRODUCTION) {\n  app.set('trust proxy', 1); // secures the app if it is running behind Nginx/Apache/similar\n}\n\napp.use(cors()); // allows cross domain requests\n\napp.use(express.json()); // allows POST requests with JSON\n\napp.use(express.urlencoded({\n  extended: false\n})); // allows POST requests with GET-like parameters\n\napp.use(cookieParser()); // Parses cookies\n\napp.use(favicon(path.join(__dirname, '../public', 'favicon.ico'))); // <-- location of favicon\n\napp.use(express[\"static\"](path.join(__dirname, '../public'))); // <-- location of public dir\n\napp.use(session({\n  // handles sessions\n  secret: 'keyboard cat',\n  // <-- this should be a secret phrase\n  cookie: {\n    secure: IS_PRODUCTION\n  },\n  // <-- secure only in production\n  resave: true,\n  saveUninitialized: true\n}));\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImNvb2tpZVBhcnNlciIsInNlc3Npb24iLCJmYXZpY29uIiwiY29ycyIsImNyZWF0ZUVycm9yIiwicGF0aCIsImFwcCIsIklTX1BST0RVQ1RJT04iLCJnZXQiLCJzZXQiLCJ1c2UiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwiam9pbiIsIl9fZGlybmFtZSIsInNlY3JldCIsImNvb2tpZSIsInNlY3VyZSIsInJlc2F2ZSIsInNhdmVVbmluaXRpYWxpemVkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsWUFBWSxHQUFHRCxPQUFPLENBQUMsZUFBRCxDQUE1QixDLENBQStDOzs7QUFDL0MsSUFBTUUsT0FBTyxHQUFHRixPQUFPLENBQUMsaUJBQUQsQ0FBdkIsQyxDQUE0Qzs7O0FBQzVDLElBQU1HLE9BQU8sR0FBR0gsT0FBTyxDQUFDLGVBQUQsQ0FBdkIsQyxDQUEwQzs7O0FBQzFDLElBQU1JLElBQUksR0FBR0osT0FBTyxDQUFDLE1BQUQsQ0FBcEIsQyxDQUE4Qjs7O0FBQzlCLElBQU1LLFdBQVcsR0FBR0wsT0FBTyxDQUFDLGFBQUQsQ0FBM0IsQyxDQUE0Qzs7O0FBQzVDLElBQU1NLElBQUksR0FBR04sT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBRUEsSUFBTU8sR0FBRyxHQUFHUixPQUFPLEVBQW5CLEMsQ0FBdUI7O0FBRXZCLElBQU1TLGFBQWEsR0FBR0QsR0FBRyxDQUFDRSxHQUFKLENBQVEsS0FBUixNQUFtQixZQUF6Qzs7QUFFQSxJQUFJRCxhQUFKLEVBQW1CO0FBQ2ZELEVBQUFBLEdBQUcsQ0FBQ0csR0FBSixDQUFRLGFBQVIsRUFBdUIsQ0FBdkIsRUFEZSxDQUNXO0FBQzdCOztBQUVESCxHQUFHLENBQUNJLEdBQUosQ0FBUVAsSUFBSSxFQUFaLEUsQ0FBaUI7O0FBQ2pCRyxHQUFHLENBQUNJLEdBQUosQ0FBUVosT0FBTyxDQUFDYSxJQUFSLEVBQVIsRSxDQUF5Qjs7QUFDekJMLEdBQUcsQ0FBQ0ksR0FBSixDQUFRWixPQUFPLENBQUNjLFVBQVIsQ0FBbUI7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBbkIsQ0FBUixFLENBQWtEOztBQUNsRFAsR0FBRyxDQUFDSSxHQUFKLENBQVFWLFlBQVksRUFBcEIsRSxDQUF5Qjs7QUFDekJNLEdBQUcsQ0FBQ0ksR0FBSixDQUFRUixPQUFPLENBQUNHLElBQUksQ0FBQ1MsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFdBQXJCLEVBQWtDLGFBQWxDLENBQUQsQ0FBZixFLENBQW1FOztBQUNuRVQsR0FBRyxDQUFDSSxHQUFKLENBQVFaLE9BQU8sVUFBUCxDQUFlTyxJQUFJLENBQUNTLElBQUwsQ0FBVUMsU0FBVixFQUFxQixXQUFyQixDQUFmLENBQVIsRSxDQUE0RDs7QUFFNURULEdBQUcsQ0FBQ0ksR0FBSixDQUFRVCxPQUFPLENBQUM7QUFBRTtBQUNkZSxFQUFBQSxNQUFNLEVBQUUsY0FESTtBQUNZO0FBQ3hCQyxFQUFBQSxNQUFNLEVBQUU7QUFBRUMsSUFBQUEsTUFBTSxFQUFFWDtBQUFWLEdBRkk7QUFFdUI7QUFDbkNZLEVBQUFBLE1BQU0sRUFBRSxJQUhJO0FBSVpDLEVBQUFBLGlCQUFpQixFQUFFO0FBSlAsQ0FBRCxDQUFmO0FBT0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmhCLEdBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL29tYXIvb21hci9CbG9nL0JhY2tlbmQvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGJhY2svc3JjL2FwcC5qc1xuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3QgY29va2llUGFyc2VyID0gcmVxdWlyZShcImNvb2tpZS1wYXJzZXJcIik7IC8vIHBhcnNlcyBjb29raWVzXG5jb25zdCBzZXNzaW9uID0gcmVxdWlyZShcImV4cHJlc3Mtc2Vzc2lvblwiKTsgLy8gcGFyc2VzIHNlc3Npb25zXG5jb25zdCBmYXZpY29uID0gcmVxdWlyZShcInNlcnZlLWZhdmljb25cIik7IC8vIHNlcnZlcyBmYXZpY29uXG5jb25zdCBjb3JzID0gcmVxdWlyZShcImNvcnNcIik7IC8vIGFsbG93cyBjcm9zcy1kb21haW4gcmVxdWVzdHNcbmNvbnN0IGNyZWF0ZUVycm9yID0gcmVxdWlyZShcImh0dHAtZXJyb3JzXCIpOyAvLyBiZXR0ZXIgSlMgZXJyb3JzXG5jb25zdCBwYXRoID0gcmVxdWlyZShcInBhdGhcIik7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTsgLy8gY3JlYXRlIGEgbmV3IGFwcFxuXG5jb25zdCBJU19QUk9EVUNUSU9OID0gYXBwLmdldCgnZW52JykgPT09ICdwcm9kdWN0aW9uJ1xuXG5pZiAoSVNfUFJPRFVDVElPTikge1xuICAgIGFwcC5zZXQoJ3RydXN0IHByb3h5JywgMSkgLy8gc2VjdXJlcyB0aGUgYXBwIGlmIGl0IGlzIHJ1bm5pbmcgYmVoaW5kIE5naW54L0FwYWNoZS9zaW1pbGFyXG59XG5cbmFwcC51c2UoY29ycygpKTsgLy8gYWxsb3dzIGNyb3NzIGRvbWFpbiByZXF1ZXN0c1xuYXBwLnVzZShleHByZXNzLmpzb24oKSk7IC8vIGFsbG93cyBQT1NUIHJlcXVlc3RzIHdpdGggSlNPTlxuYXBwLnVzZShleHByZXNzLnVybGVuY29kZWQoeyBleHRlbmRlZDogZmFsc2UgfSkpOyAvLyBhbGxvd3MgUE9TVCByZXF1ZXN0cyB3aXRoIEdFVC1saWtlIHBhcmFtZXRlcnNcbmFwcC51c2UoY29va2llUGFyc2VyKCkpOyAvLyBQYXJzZXMgY29va2llc1xuYXBwLnVzZShmYXZpY29uKHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi9wdWJsaWMnLCAnZmF2aWNvbi5pY28nKSkpIC8vIDwtLSBsb2NhdGlvbiBvZiBmYXZpY29uXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi9wdWJsaWMnKSkpOyAvLyA8LS0gbG9jYXRpb24gb2YgcHVibGljIGRpclxuXG5hcHAudXNlKHNlc3Npb24oeyAvLyBoYW5kbGVzIHNlc3Npb25zXG4gICAgc2VjcmV0OiAna2V5Ym9hcmQgY2F0JywgLy8gPC0tIHRoaXMgc2hvdWxkIGJlIGEgc2VjcmV0IHBocmFzZVxuICAgIGNvb2tpZTogeyBzZWN1cmU6IElTX1BST0RVQ1RJT04gfSwgLy8gPC0tIHNlY3VyZSBvbmx5IGluIHByb2R1Y3Rpb25cbiAgICByZXNhdmU6IHRydWUsXG4gICAgc2F2ZVVuaW5pdGlhbGl6ZWQ6IHRydWVcbn0pKVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFwcDtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "cookieParser",
        "session",
        "favicon",
        "cors",
        "createError",
        "path",
        "app",
        "IS_PRODUCTION",
        "get",
        "set",
        "use",
        "json",
        "urlencoded",
        "extended",
        "join",
        "__dirname",
        "secret",
        "cookie",
        "secure",
        "resave",
        "saveUninitialized",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,eAAD,CAA5B,C,CAA+C;;;AAC/C,IAAME,OAAO,GAAGF,OAAO,CAAC,iBAAD,CAAvB,C,CAA4C;;;AAC5C,IAAMG,OAAO,GAAGH,OAAO,CAAC,eAAD,CAAvB,C,CAA0C;;;AAC1C,IAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB,C,CAA8B;;;AAC9B,IAAMK,WAAW,GAAGL,OAAO,CAAC,aAAD,CAA3B,C,CAA4C;;;AAC5C,IAAMM,IAAI,GAAGN,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMO,GAAG,GAAGR,OAAO,EAAnB,C,CAAuB;;AAEvB,IAAMS,aAAa,GAAGD,GAAG,CAACE,GAAJ,CAAQ,KAAR,MAAmB,YAAzC;;AAEA,IAAID,aAAJ,EAAmB;AACfD,EAAAA,GAAG,CAACG,GAAJ,CAAQ,aAAR,EAAuB,CAAvB,EADe,CACW;AAC7B;;AAEDH,GAAG,CAACI,GAAJ,CAAQP,IAAI,EAAZ,E,CAAiB;;AACjBG,GAAG,CAACI,GAAJ,CAAQZ,OAAO,CAACa,IAAR,EAAR,E,CAAyB;;AACzBL,GAAG,CAACI,GAAJ,CAAQZ,OAAO,CAACc,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR,E,CAAkD;;AAClDP,GAAG,CAACI,GAAJ,CAAQV,YAAY,EAApB,E,CAAyB;;AACzBM,GAAG,CAACI,GAAJ,CAAQR,OAAO,CAACG,IAAI,CAACS,IAAL,CAAUC,SAAV,EAAqB,WAArB,EAAkC,aAAlC,CAAD,CAAf,E,CAAmE;;AACnET,GAAG,CAACI,GAAJ,CAAQZ,OAAO,UAAP,CAAeO,IAAI,CAACS,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR,E,CAA4D;;AAE5DT,GAAG,CAACI,GAAJ,CAAQT,OAAO,CAAC;AAAE;AACde,EAAAA,MAAM,EAAE,cADI;AACY;AACxBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,MAAM,EAAEX;AAAV,GAFI;AAEuB;AACnCY,EAAAA,MAAM,EAAE,IAHI;AAIZC,EAAAA,iBAAiB,EAAE;AAJP,CAAD,CAAf;AAOAC,MAAM,CAACC,OAAP,GAAiBhB,GAAjB",
      "sourceRoot": "/home/omar/omar/Blog/Backend/src/",
      "sourcesContent": [
        "// back/src/app.js\nconst express = require(\"express\");\nconst cookieParser = require(\"cookie-parser\"); // parses cookies\nconst session = require(\"express-session\"); // parses sessions\nconst favicon = require(\"serve-favicon\"); // serves favicon\nconst cors = require(\"cors\"); // allows cross-domain requests\nconst createError = require(\"http-errors\"); // better JS errors\nconst path = require(\"path\");\n\nconst app = express(); // create a new app\n\nconst IS_PRODUCTION = app.get('env') === 'production'\n\nif (IS_PRODUCTION) {\n    app.set('trust proxy', 1) // secures the app if it is running behind Nginx/Apache/similar\n}\n\napp.use(cors()); // allows cross domain requests\napp.use(express.json()); // allows POST requests with JSON\napp.use(express.urlencoded({ extended: false })); // allows POST requests with GET-like parameters\napp.use(cookieParser()); // Parses cookies\napp.use(favicon(path.join(__dirname, '../public', 'favicon.ico'))) // <-- location of favicon\napp.use(express.static(path.join(__dirname, '../public'))); // <-- location of public dir\n\napp.use(session({ // handles sessions\n    secret: 'keyboard cat', // <-- this should be a secret phrase\n    cookie: { secure: IS_PRODUCTION }, // <-- secure only in production\n    resave: true,\n    saveUninitialized: true\n}))\n\nmodule.exports = app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1620764957438
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/omar/omar/Blog/Backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/omar/omar/Blog/Backend\",\"filename\":\"/home/omar/omar/Blog/Backend/src/db.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/omar/omar/Blog/Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.16": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/omar/omar/Blog/Backend/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/omar/omar/Blog/Backend",
      "filename": "/home/omar/omar/Blog/Backend/src/db.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/omar/omar/Blog/Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/omar/omar/Blog/Backend/src/db.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/omar/omar/Blog/Backend/src/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/omar/omar/Blog/Backend/src/",
        "sourceFileName": "db.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// back/src/db.js\nvar sqlite = require(\"sqlite\");\n\nvar sqlite3 = require(\"sqlite3\");\n\nvar SQL = require(\"sql-template-strings\"); //creation of db\n// const test = async () => {\n//   try {\n//     const db = await sqlite.open({\n//       filename: \"db.sqlite\",\n//       driver: sqlite3.Database,\n//     });\n//     /**\n//      * Create the table\n//      **/\n//     await db.run(`CREATE TABLE post_tbl\n//           (id INTEGER PRIMARY KEY AUTOINCREMENT, \n//             name text ,\n//             email text ,\n//               category varchar(25) , \n//               title varchar(25) , \n//               content text  ,\n//               description text  ,\n//               created_at DATE ,\n//               picture TEXT ,\n//               status varchar(25) not null DEFAULT 'I'\n//               );\n//         `);\n//         await db.run(`CREATE TABLE admin\n//           (id INTEGER PRIMARY KEY AUTOINCREMENT, \n//             user text not null,\n//             password varchar(25) not null\n//               );\n//         `);\n//         await db.run(`CREATE TABLE message\n//           (id INTEGER PRIMARY KEY AUTOINCREMENT, \n//             username text ,\n//             email text ,\n//             message text \n//               );\n//         `);\n//         const stmt = await db.prepare(SQL`INSERT INTO admin (user, password) VALUES (?, ?)`);\n//         await stmt.run(`Bassel`,`Root`);\n//         /** finally, we close the statement **/\n//         await stmt.finalize();\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n// module.exports = { test };\n// back/src/db.js\n\n\nvar initializeDatabase = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n    var db, postsAdmin, pendingPosts, messages, postsUser, postsID, getPostCategory, createPost, createMessage, deletePosts, acceptPost, controller;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return sqlite.open({\n              filename: 'db.sqlite',\n              driver: sqlite3.Database\n            });\n\n          case 2:\n            db = _context11.sent;\n\n            postsAdmin = /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                var statement, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        statement = \"SELECT * FROM post_tbl\";\n                        _context.prev = 1;\n                        _context.next = 4;\n                        return db.all(statement);\n\n                      case 4:\n                        rows = _context.sent;\n\n                        if (rows.length) {\n                          _context.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"no rows found\");\n\n                      case 7:\n                        return _context.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context.prev = 10;\n                        _context.t0 = _context[\"catch\"](1);\n                        throw new Error(\"couldn't retrieve posts: \" + _context.t0.message);\n\n                      case 13:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 10]]);\n              }));\n\n              return function postsAdmin() {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            pendingPosts = /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                var statement, rows;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        statement = \"SELECT * FROM post_tbl WHERE status= 'pendeing'\";\n                        _context2.prev = 1;\n                        _context2.next = 4;\n                        return db.all(statement);\n\n                      case 4:\n                        rows = _context2.sent;\n\n                        if (rows.length) {\n                          _context2.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"no rows found\");\n\n                      case 7:\n                        return _context2.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context2.prev = 10;\n                        _context2.t0 = _context2[\"catch\"](1);\n                        throw new Error(\"couldn't retrieve posts: \" + _context2.t0.message);\n\n                      case 13:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[1, 10]]);\n              }));\n\n              return function pendingPosts() {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            messages = /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                var statement, rows;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        statement = \"SELECT * FROM message\";\n                        _context3.prev = 1;\n                        _context3.next = 4;\n                        return db.all(statement);\n\n                      case 4:\n                        rows = _context3.sent;\n\n                        if (rows.length) {\n                          _context3.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"no messages found\");\n\n                      case 7:\n                        return _context3.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context3.prev = 10;\n                        _context3.t0 = _context3[\"catch\"](1);\n                        throw new Error(\"couldn't retrieve messages: \" + _context3.t0.message);\n\n                      case 13:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[1, 10]]);\n              }));\n\n              return function messages() {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            postsUser = /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n                var statement, rows;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        statement = \"SELECT id, name, category, title,  content, created_at, picture FROM post_tbl where status = 'accepted'\";\n                        _context4.prev = 1;\n                        _context4.next = 4;\n                        return db.all(statement);\n\n                      case 4:\n                        rows = _context4.sent;\n\n                        if (rows.length) {\n                          _context4.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"no rows found\");\n\n                      case 7:\n                        return _context4.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context4.prev = 10;\n                        _context4.t0 = _context4[\"catch\"](1);\n                        throw new Error(\"couldn't retrieve posts: \" + _context4.t0.message);\n\n                      case 13:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[1, 10]]);\n              }));\n\n              return function postsUser() {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            postsID = /*#__PURE__*/function () {\n              var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(id) {\n                var statement, rows;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        statement = \"SELECT id, name, email,category, title, content, created_at, picture FROM post_tbl WHERE id= \".concat(id);\n                        _context5.prev = 1;\n                        _context5.next = 4;\n                        return db.all(statement);\n\n                      case 4:\n                        rows = _context5.sent;\n\n                        if (rows.length) {\n                          _context5.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"no rows found\");\n\n                      case 7:\n                        return _context5.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context5.prev = 10;\n                        _context5.t0 = _context5[\"catch\"](1);\n                        throw new Error(\"couldn't retrieve posts: \" + _context5.t0.message);\n\n                      case 13:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[1, 10]]);\n              }));\n\n              return function postsID(_x) {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            getPostCategory = /*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(category) {\n                var statement, posts;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        statement = \"SELECT id, name, email, category, title,  content, created_at, picture FROM post_tbl WHERE category = \".concat(category);\n                        _context6.next = 3;\n                        return db.get(statement);\n\n                      case 3:\n                        posts = _context6.sent;\n\n                        if (posts) {\n                          _context6.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"post \".concat(category, \" not found\"));\n\n                      case 6:\n                        return _context6.abrupt(\"return\", posts);\n\n                      case 7:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n\n              return function getPostCategory(_x2) {\n                return _ref7.apply(this, arguments);\n              };\n            }();\n\n            createPost = /*#__PURE__*/function () {\n              var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(props) {\n                var name, email, category, title, content, picture, result, id;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        if (!(!props || !props.name || !props.email || !props.category || !props.title || !props.content)) {\n                          _context7.next = 2;\n                          break;\n                        }\n\n                        throw new Error(\"you must provide all needed DATA\");\n\n                      case 2:\n                        name = props.name, email = props.email, category = props.category, title = props.title, content = props.content, picture = props.picture;\n                        _context7.prev = 3;\n                        _context7.next = 6;\n                        return db.run(\"INSERT INTO post_tbl (name, email, category, title,  content, picture) VALUES (?, ?, ?, ?, ?, ?)\", [name, email, category, title, content, picture]);\n\n                      case 6:\n                        result = _context7.sent;\n                        id = result.lastID;\n                        return _context7.abrupt(\"return\", id);\n\n                      case 11:\n                        _context7.prev = 11;\n                        _context7.t0 = _context7[\"catch\"](3);\n                        throw new Error(\"couldn't insert this combination: \" + _context7.t0.message);\n\n                      case 14:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[3, 11]]);\n              }));\n\n              return function createPost(_x3) {\n                return _ref8.apply(this, arguments);\n              };\n            }();\n\n            createMessage = /*#__PURE__*/function () {\n              var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(props) {\n                var username, email, message, result, id;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        if (!(!props || !props.username || !props.email || !props.message)) {\n                          _context8.next = 2;\n                          break;\n                        }\n\n                        throw new Error(\"you must provide all needed DATA\");\n\n                      case 2:\n                        username = props.username, email = props.email, message = props.message;\n                        _context8.prev = 3;\n                        _context8.next = 6;\n                        return db.run(\"INSERT INTO message (username, email, message) VALUES (?, ?, ?)\", [username, email, message]);\n\n                      case 6:\n                        result = _context8.sent;\n                        id = result.lastID;\n                        return _context8.abrupt(\"return\", id);\n\n                      case 11:\n                        _context8.prev = 11;\n                        _context8.t0 = _context8[\"catch\"](3);\n                        throw new Error(\"couldn't insert this combination: \" + _context8.t0.message);\n\n                      case 14:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8, null, [[3, 11]]);\n              }));\n\n              return function createMessage(_x4) {\n                return _ref9.apply(this, arguments);\n              };\n            }();\n\n            deletePosts = /*#__PURE__*/function () {\n              var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        _context9.prev = 0;\n                        _context9.next = 3;\n                        return db.run(\"DELETE FROM post_tbl WHERE id = ?\", id);\n\n                      case 3:\n                        result = _context9.sent;\n\n                        if (!(result.changes === 0)) {\n                          _context9.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"post \\\"\".concat(id, \"\\\" does not exist\"));\n\n                      case 6:\n                        return _context9.abrupt(\"return\", true);\n\n                      case 9:\n                        _context9.prev = 9;\n                        _context9.t0 = _context9[\"catch\"](0);\n                        throw new Error(\"couldn't delete the post \\\"\".concat(id, \"\\\": \") + _context9.t0.message);\n\n                      case 12:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9, null, [[0, 9]]);\n              }));\n\n              return function deletePosts(_x5) {\n                return _ref10.apply(this, arguments);\n              };\n            }();\n\n            acceptPost = /*#__PURE__*/function () {\n              var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(id) {\n                var stmt, params, result;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        params = [];\n                        stmt = \"UPDATE post_tbl SET  status = 'accepted' WHERE id = ?\";\n                        params = [id];\n                        _context10.prev = 3;\n                        _context10.next = 6;\n                        return db.run(stmt, params);\n\n                      case 6:\n                        result = _context10.sent;\n\n                        if (!(result.changes === 0)) {\n                          _context10.next = 9;\n                          break;\n                        }\n\n                        throw new Error(\"no changes were made\");\n\n                      case 9:\n                        return _context10.abrupt(\"return\", true);\n\n                      case 12:\n                        _context10.prev = 12;\n                        _context10.t0 = _context10[\"catch\"](3);\n                        throw new Error(\"couldn't accept this post \".concat(id, \": \") + _context10.t0.message);\n\n                      case 15:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[3, 12]]);\n              }));\n\n              return function acceptPost(_x6) {\n                return _ref11.apply(this, arguments);\n              };\n            }();\n\n            controller = {\n              postsAdmin: postsAdmin,\n              pendingPosts: pendingPosts,\n              acceptPost: acceptPost,\n              postsUser: postsUser,\n              postsID: postsID,\n              createPost: createPost,\n              getPostCategory: getPostCategory,\n              deletePosts: deletePosts,\n              createMessage: createMessage,\n              messages: messages\n            };\n            return _context11.abrupt(\"return\", controller);\n\n          case 15:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function initializeDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar db = {\n  initializeDatabase: initializeDatabase\n};\nmodule.exports = db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "sqlite",
        "require",
        "sqlite3",
        "SQL",
        "initializeDatabase",
        "open",
        "filename",
        "driver",
        "Database",
        "db",
        "postsAdmin",
        "statement",
        "all",
        "rows",
        "length",
        "Error",
        "message",
        "pendingPosts",
        "messages",
        "postsUser",
        "postsID",
        "id",
        "getPostCategory",
        "category",
        "get",
        "posts",
        "createPost",
        "props",
        "name",
        "email",
        "title",
        "content",
        "picture",
        "run",
        "result",
        "lastID",
        "createMessage",
        "username",
        "deletePosts",
        "changes",
        "acceptPost",
        "params",
        "stmt",
        "controller",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/omar/omar/Blog/Backend/src/",
      "sourcesContent": [
        "// back/src/db.js\nconst sqlite = require(\"sqlite\");\nconst sqlite3 = require(\"sqlite3\");\nconst SQL = require(\"sql-template-strings\");\n\n//creation of db\n// const test = async () => {\n//   try {\n//     const db = await sqlite.open({\n//       filename: \"db.sqlite\",\n//       driver: sqlite3.Database,\n//     });\n//     /**\n//      * Create the table\n//      **/\n//     await db.run(`CREATE TABLE post_tbl\n//           (id INTEGER PRIMARY KEY AUTOINCREMENT, \n//             name text ,\n//             email text ,\n//               category varchar(25) , \n//               title varchar(25) , \n//               content text  ,\n//               description text  ,\n//               created_at DATE ,\n//               picture TEXT ,\n//               status varchar(25) not null DEFAULT 'I'\n//               );\n//         `);\n\n//         await db.run(`CREATE TABLE admin\n//           (id INTEGER PRIMARY KEY AUTOINCREMENT, \n//             user text not null,\n//             password varchar(25) not null\n//               );\n//         `);\n\n\n//         await db.run(`CREATE TABLE message\n//           (id INTEGER PRIMARY KEY AUTOINCREMENT, \n//             username text ,\n//             email text ,\n//             message text \n//               );\n//         `);\n\n//         const stmt = await db.prepare(SQL`INSERT INTO admin (user, password) VALUES (?, ?)`);\n//         await stmt.run(`Bassel`,`Root`);\n//         /** finally, we close the statement **/\n//         await stmt.finalize();\n\n        \n\n   \n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n// module.exports = { test };\n\n// back/src/db.js\n\n\nconst initializeDatabase = async () => {\n\n    const db = await sqlite.open({\n        filename: 'db.sqlite',\n        driver: sqlite3.Database\n    })\n\n    const postsAdmin = async () => {\n        let statement = `SELECT * FROM post_tbl`\n       \n        try {\n            const rows = await db.all(statement);\n            if (!rows.length) throw new Error(`no rows found`);\n            return rows;\n        } catch (e) {\n            throw new Error(`couldn't retrieve posts: ` + e.message);\n        }\n    }\n    const pendingPosts = async () => {\n        let statement = `SELECT * FROM post_tbl WHERE status= 'pendeing'`\n       \n        try {\n            const rows = await db.all(statement);\n            if (!rows.length) throw new Error(`no rows found`);\n            return rows;\n        } catch (e) {\n            throw new Error(`couldn't retrieve posts: ` + e.message);\n        }\n    }\n    const messages = async () => {\n        let statement = `SELECT * FROM message`\n       \n        try {\n            const rows = await db.all(statement);\n            if (!rows.length) throw new Error(`no messages found`);\n            return rows;\n        } catch (e) {\n            throw new Error(`couldn't retrieve messages: ` + e.message);\n        }\n    }\n\n    const postsUser = async () => {\n        let statement = `SELECT id, name, category, title,  content, created_at, picture FROM post_tbl where status = 'accepted'`\n       \n        try {\n            const rows = await db.all(statement);\n            if (!rows.length) throw new Error(`no rows found`);\n            return rows;\n        } catch (e) {\n            throw new Error(`couldn't retrieve posts: ` + e.message);\n        }\n    }\n\n    const postsID = async (id) => {\n        let statement = `SELECT id, name, email,category, title, content, created_at, picture FROM post_tbl WHERE id= ${id}`\n       \n        try {\n            const rows = await db.all(statement);\n            if (!rows.length) throw new Error(`no rows found`);\n            return rows;\n        } catch (e) {\n            throw new Error(`couldn't retrieve posts: ` + e.message);\n        }\n    }\n\n    const getPostCategory = async (category) => {\n        let statement = `SELECT id, name, email, category, title,  content, created_at, picture FROM post_tbl WHERE category = ${category}`\n        const posts = await db.get(statement);\n        if (!posts) throw new Error(`post ${category} not found`);\n        return posts;\n    }\n\n\n    const createPost = async (props) => {\n        if (!props || !props.name || !props.email || !props.category || !props.title || !props.content    ) {\n            throw new Error(`you must provide all needed DATA`);\n        }\n        const { name, email, category, title,  content,  picture} = props;\n        try {\n            const result = await db.run(`INSERT INTO post_tbl (name, email, category, title,  content, picture) VALUES (?, ?, ?, ?, ?, ?)`, [name, email, category, title,  content, picture]);\n            const id = result.lastID;\n            return id;\n        } catch (e) {\n            throw new Error(`couldn't insert this combination: ` + e.message);\n        }\n    }\n    \n    const createMessage = async (props) => {\n        if (!props || !props.username || !props.email || !props.message  ) {\n            throw new Error(`you must provide all needed DATA`);\n        }\n        const { username, email, message} = props;\n        try {\n            const result = await db.run(`INSERT INTO message (username, email, message) VALUES (?, ?, ?)`, [username, email, message]);\n            const id = result.lastID;\n            return id;\n        } catch (e) {\n            throw new Error(`couldn't insert this combination: ` + e.message);\n        }\n    }\n\n    const deletePosts = async (id) => {\n        try {\n            const result = await db.run(`DELETE FROM post_tbl WHERE id = ?`, id);\n            if (result.changes === 0) throw new Error(`post \"${id}\" does not exist`);\n            return true;\n        } catch (e) {\n            throw new Error(`couldn't delete the post \"${id}\": ` + e.message);\n        }\n    }\n\n    const acceptPost = async (id) => {\n        \n        let stmt, params = [];\n            stmt = `UPDATE post_tbl SET  status = 'accepted' WHERE id = ?`;\n            params = [id];\n        try {\n            const result = await db.run(stmt, params);\n            if (result.changes === 0) throw new Error(`no changes were made`);\n            return true;\n        } catch (e) {\n            throw new Error(`couldn't accept this post ${id}: ` + e.message);\n        }\n    }\n\n\n  \n\n    const controller = {\n        postsAdmin,\n        pendingPosts,\n        acceptPost,\n        postsUser,\n        postsID,\n        createPost,\n        getPostCategory,\n        deletePosts,\n        createMessage,\n        messages\n    }\n\n    return controller;\n}\n\nconst db = { initializeDatabase }\n\nmodule.exports = db;"
      ]
    },
    "sourceType": "script",
    "mtime": 1621234975689
  }
}